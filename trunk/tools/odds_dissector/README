Starting with release 2.2, OpenDDS provides support for Wireshark.
The OpenDDS DCPS dissector provides a Wireshark 1.2.x compatible dissector
which supports the TCP/IP, UDP/IP, and IP multicast transports.  Dissection
of transport and encapsulated sample headers are fully supported.


======================================================================
* See also

  - Wireshark Project Page
      <http://www.wireshark.org/>
  - Wireshark Download Page
      <http://www.wireshark.org/download.html>
  - Wireshark Developer's Guide
      <http://www.wireshark.org/docs/wsdg_html_chunked/>
  - Wireshark User's Guide
      <http://www.wireshark.org/docs/wsug_html_chunked/>


======================================================================
* Building the OpenDDS DCPS dissector

These instructions assume you have completed the installation steps in
the $DDS_ROOT/INSTALL document, including having the various environment
variables defined.

In addition, the Wireshark sources must be available and built locally
according to the Wireshark Developer's Guide (see above).

1. Define environment variables

   Linux and Solaris:
     export GLIB_ROOT=<full path to the GLib installation directory>
     export WIRESHARK_SRC=<full path to Wireshark source directory>
   Windows:
     set GLIB_ROOT=<full path to the Wireshark win32-libs/gtk2 directory>
     set WIRESHARK_SRC=<full path to the Wireshark source directory>
     set WIRETAP_VERSION=<version of the wiretap DLL built by Wireshark>

2. Generate MPC workspace

   Linux and Solaris:
     cd $DDS_ROOT/tools/odds_dissector/
     perl $ACE_ROOT/bin/mwc.pl -type gnuace -features wireshark=1

   Windows:
     cd %DDS_ROOT%\tools\odds_dissector\
     perl %ACE_ROOT%\bin\mwc.pl -type [CompilerType] -features wireshark=1
       "CompilerTypes" tested includes vc71, vc8, vc9, and nmake

3. Build

   Build normally as described in the $DDS_ROOT/INSTALL document.

4. Install plugin

   Linux and Solaris:
     cp odds.so <full path of Wireshark install>/plugins/<version>/

   Windows:
     copy odds.dll <full path of Wireshark install>\plugins\<version>\
     - or -
     copy oddsd.dll <full path of Wireshark install>\plugins\<version>\

5. Run Wireshark

   You may verify the plugin is installed correctly by clicking on the
   Help -> Supported Protocols menu item.

   NOTE: You may need to define LD_LIBRARY_PATH (for Linux and Solaris),
         or PATH (for Windows) in order to resolve all dependent libraries
	 at run-time.


======================================================================
* Available Filters

A number of filters are supported by the OpenDDS DCPS dissector:

1. Transport header filters

   odds.version
     Revision of the DCPS protocol.

   odds.byte_order
     Byte order of transport header contents.

   odds.length
     Total length of payload, including sample headers.

   odds.sequence
     Sequence number of transmitted PDU.

   odds.source
     Source identifier; only used by the multicast transport.

2. Sample header filters

   odds.sample.id
     Message ID of sample (i.e. SAMPLE_DATA).

   odds.sample.sub_id
     Sub-Message ID of sample (i.e. MULTICAST_SYN).

   odds.sample.flags
     Flags field (see below).

   odds.sample.flags.byte_order
     Indicates byte order of sample data.

   odds.sample.flags.coherent
     Indicates sample belongs to a coherent change group.

   odds.sample.flags.historic
     Indicates sample is historic; resent by DataWriter.

   odds.sample.flags.lifespan
     Indicates sample defines a lifespan.

   odds.sample.length
     Total length of sample data, not including sample header.
   
   odds.sample.sequence
     Sequence number of transmitted SAMPLE_DATA.

   odds.sample.timestamp
     Source timestamp of sample.

   odds.sample.lifespan
     Lifespan duration of sample (iff lifespan flag is set).
   
   odds.sample.publication
     Publication ID of transmitting DataWriter.


======================================================================
* Known Limitations

- OpenDDS only maintains wire compatibility with the current revision
  of the DCPS protocol.  This dissector is effective for the compiled
  protocol version only.

- Dissection of marshaled sample data is not currently supported. 


