<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Id$

    Author:  Steven Stallion
    Version: $Revision$
-->
<project name="opendds-jms" default="compile" basedir=".">
    <property name="build.dir" value="${basedir}/build"/>
    <property name="doc.dir" value="${basedir}/doc"/>
    <property name="lib.dir" value="${basedir}/lib"/>
    <property name="native.dir" value="${basedir}/native"/>
    <property name="src.dir" value="${basedir}/src"/>
    <property name="test.dir" value="${basedir}/test"/>

    <property environment="env"/>

    <!-- Determine project version -->
    <loadproperties srcfile="${env.DDS_ROOT}/dds/Version.h">
        <filterchain>
            <deletecharacters chars="&quot;"/>
            <tokenfilter>
                <replacestring from="#define DDS_MAJOR_VERSION" to="version.dds.major"/>
                <replacestring from="#define DDS_MINOR_VERSION" to="version.dds.minor"/>
                <replacestring from="#define DDS_MICRO_VERSION" to="version.dds.micro"/>
                <replacestring from="#define DDS_VERSION" to="version.dds"/> <!-- project version -->
            </tokenfilter>
        </filterchain>
    </loadproperties>

    <property file="version.properties"/>

    <property file="build.properties"/>

    <!--
        Project Paths
    -->
    <fileset id="project.resources" dir="${src.dir}">
        <exclude name="**/*.java"/>
    </fileset>

    <fileset id="test.resources" dir="${test.dir}">
        <exclude name="**/*.java"/>
    </fileset>

    <path id="project.classpath">
        <pathelement location="${build.dir}/classes"/>
        <pathelement location="${build.dir}/tests"/>

        <pathelement location="${native.dir}/classes"/>

        <fileset refid="project.resources"/>
        <fileset refid="test.resources"/>

        <fileset dir="${lib.dir}"/>

        <fileset dir="${env.DDS_ROOT}/lib">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <macrodef name="antnative">
        <attribute name="target"/>
        <sequential>
            <subant buildpath="${native.dir}" target="@{target}"/>
        </sequential>
    </macrodef>

    <!--
        Project Targets
    -->
    <target name="all" depends="clean, test, jar"
            description="Meta target for: clean, compile, test, jar"/>

    <target name="clean" depends="javadoc.clean, test.clean, idl.clean"
            description="Delete all build artifacts">
        <delete dir="${build.dir}"/>
    </target>

    <target name="init">
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${build.dir}/classes"/>

        <copy file="${basedir}/version.properties"
              todir="${build.dir}"/>

        <!-- Update version.properties -->
        <propertyfile file="${build.dir}/version.properties">
            <entry key="version.dds" value="${version.dds}"/>
            <entry key="version.dds.major" value="${version.dds.major}"/>
            <entry key="version.dds.minor" value="${version.dds.minor}"/>
            <entry key="version.dds.micro" value="${version.dds.micro}" default=""/>
        </propertyfile>
    </target>

    <target name="idl.clean">
        <antnative target="clean"/>
    </target>

    <target name="idl">
        <antnative target="idl"/>
    </target>

    <target name="compile" depends="init, idl"
            description="Compile classes under src/">
        <javac srcdir="${src.dir}"
               destdir="${build.dir}/classes"
               debug="${compile.debug}"
               deprecation="${compile.deprecation}"
               optimize="${compile.optimize}"
               source="${project.source}"
               classpathref="project.classpath">
        </javac>
    </target>

    <target name="jar" depends="compile"
            description="Archive compiled classes and resources">
        <jar destfile="${build.dir}/${ant.project.name}-${version.dds}.jar"
             compress="${jar.compress}"
             index="${jar.index}">

            <fileset refid="project.resources"/>

            <fileset dir="${build.dir}/classes"/>
            <fileset dir="${build.dir}">
                <include name="version.properties"/>
            </fileset>

            <fileset dir="${native.dir}/classes"/>

            <!-- Identify distribution -->
            <manifest>
                <attribute name="Specification-Title" value="Java Message Service (JMS)"/>
                <attribute name="Specification-Version" value="${version.jms}"/>
                <attribute name="Specification-Vendor" value="Sun Microsystems Inc."/>
                <attribute name="Implementation-Title" value="OpenDDS JMS Provider"/>
                <attribute name="Implementation-Version" value="${version.dds}"/>
                <attribute name="Implementation-URL" value="http://www.opendds.org/"/>
            </manifest>
        </jar>
    </target>

    <target name="test.clean">
        <delete dir="${build.dir}/tests"/>
    </target>

    <target name="test.init" depends="init">
        <mkdir dir="${build.dir}/tests"/>
    </target>

    <target name="test.compile" depends="compile, test.init">
        <javac srcdir="${test.dir}"
               destdir="${build.dir}/tests"
               debug="${compile.debug}"
               deprecation="${compile.deprecation}"
               optimize="${compile.optimize}"
               source="${project.source}"
               classpathref="project.classpath">
        </javac>
    </target>

    <target name="test" depends="test.compile"
            description="Run test suites under test/">
        <junit haltonerror="true"
               haltonfailure="true"
               printsummary="true"
               fork="true">
            <formatter type="brief"/>
            <batchtest todir="${build.dir}/tests">
                <fileset dir="${test.dir}">
                    <include name="**/*Test.java"/>
                </fileset>
            </batchtest>
            <jvmarg value="-ea"/> <!-- enable assertions -->
            <classpath refid="project.classpath"/>
        </junit>
    </target>

    <target name="javadoc.clean">
        <delete dir="${doc.dir}/api"/>
    </target>

    <target name="javadoc.init">
        <mkdir dir="${doc.dir}/api"/>
    </target>

    <target name="javadoc" depends="javadoc.init"
            description="Generate API documentation under doc/api/">
        <javadoc destdir="${doc.dir}/api"
                 source="${project.source}"
                 author="true"
                 version="true"
                 overview="${doc.dir}/overview.html"
                 doctitle="OpenDDS ${version.dds} JMS API Specification"
                 windowtitle="${ant.project.name}">
            <link href="http://java.sun.com/j2se/${project.source}/docs/api/"/>
            <link href="http://java.sun.com/javaee/5/docs/api/"/>
            <classpath refid="project.classpath"/>
            <packageset dir="${src.dir}"/>
        </javadoc>
    </target>
</project>
