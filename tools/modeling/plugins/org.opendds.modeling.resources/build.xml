<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Id$
-->
<project name="org.opendds.modeling.resources" default="archive" basedir=".">
    <property name="build.dir" value="${basedir}/build"/>
    
    <import file="${basedir}/../../etc/build-plugin.xml"/>

    <!--
        Plugin Paths
    -->
    <property name="plugin.artifact" value="${ant.project.name}.jar"/>

    <path id="plugin.classpath">
        <pathelement path="${build.dir}/classes"/>
        <path refid="project.classpath"/>
    </path>

    <fileset id="plugin.resources" dir="${basedir}">
        <include name="META-INF/**"/>
        <include name="libraries/**"/>
        <include name="profiles/**"/>
        <include name="plugin.xml"/>
        <!-- Exclude UML2 diagrams -->
        <exclude name="**/*.umlprofile"/>
    </fileset>

    <!--
        Plugin Targets
    -->
    <target name="all" depends="clean, archive"
            description="Meta-target for: clean, archive"/>

    <target name="clean"
            description="Delete plugin artifacts">
        <delete dir="${build.dir}"/>
    </target>

    <target name="init" depends="resolve">
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${build.dir}/classes"/>
        
        <uptodate property="plugin.uptodate"
                  targetfile="${build.dir}/${plugin.artifact}">
            <srcfiles refid="plugin.resources"/>
        </uptodate>
    </target>

    <target name="compile" depends="init" unless="plugin.uptodate"
            description="Compile plugin artifacts">
        <!-- Copy plugin resources -->
        <copy todir="${build.dir}/classes">
            <fileset refid="plugin.resources"/>
        </copy>

        <!-- Update plugin Bundle-Version --> 
        <manifest file="${build.dir}/classes/META-INF/MANIFEST.MF" mode="update">
            <attribute name="Bundle-Version" value="${opendds.version}"/>
        </manifest>
    </target>

    <target name="archive" depends="compile" unless="plugin.uptodate"
            description="Archive plugin artifacts">
        <jar destfile="${build.dir}/${plugin.artifact}"
             compress="${jar.compress}"
             index="${jar.index}"
             filesetmanifest="merge">
            <fileset dir="${build.dir}/classes"/>
        </jar>
    </target>
</project>
