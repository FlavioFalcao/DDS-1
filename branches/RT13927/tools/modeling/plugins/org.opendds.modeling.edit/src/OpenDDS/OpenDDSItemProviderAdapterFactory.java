/*
 * $Id$
 *
 * Copyright 2010 Object Computing, Inc.
 *
 * Distributed under the OpenDDS License.
 * See: http://www.opendds.org/license.html
 */

package OpenDDS;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class OpenDDSItemProviderAdapterFactory extends OpenDDSAdapterFactory implements ComposeableAdapterFactory,
        IChangeNotifier, IDisposable {
    /**
     * This keeps track of the root adapter factory that delegates to this adapter factory.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ComposedAdapterFactory parentAdapterFactory;

    /**
     * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected IChangeNotifier changeNotifier = new ChangeNotifier();

    /**
     * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected Collection<Object> supportedTypes = new ArrayList<Object>();

    /**
     * This constructs an instance.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public OpenDDSItemProviderAdapterFactory() {
        supportedTypes.add(IEditingDomainItemProvider.class);
        supportedTypes.add(IStructuredItemContentProvider.class);
        supportedTypes.add(ITreeItemContentProvider.class);
        supportedTypes.add(IItemLabelProvider.class);
        supportedTypes.add(IItemPropertySource.class);
    }

    /**
     * This keeps track of the one adapter used for all {@link OpenDDS.ContentFilteredTopic} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ContentFilteredTopicItemProvider contentFilteredTopicItemProvider;

    /**
     * This creates an adapter for a {@link OpenDDS.ContentFilteredTopic}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createContentFilteredTopicAdapter() {
        if (contentFilteredTopicItemProvider == null) {
            contentFilteredTopicItemProvider = new ContentFilteredTopicItemProvider(this);
        }

        return contentFilteredTopicItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link OpenDDS.MultiTopic} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected MultiTopicItemProvider multiTopicItemProvider;

    /**
     * This creates an adapter for a {@link OpenDDS.MultiTopic}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createMultiTopicAdapter() {
        if (multiTopicItemProvider == null) {
            multiTopicItemProvider = new MultiTopicItemProvider(this);
        }

        return multiTopicItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link OpenDDS.Topic} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected TopicItemProvider topicItemProvider;

    /**
     * This creates an adapter for a {@link OpenDDS.Topic}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createTopicAdapter() {
        if (topicItemProvider == null) {
            topicItemProvider = new TopicItemProvider(this);
        }

        return topicItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link OpenDDS.Array} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ArrayItemProvider arrayItemProvider;

    /**
     * This creates an adapter for a {@link OpenDDS.Array}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createArrayAdapter() {
        if (arrayItemProvider == null) {
            arrayItemProvider = new ArrayItemProvider(this);
        }

        return arrayItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link OpenDDS.OBoolean} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected OBooleanItemProvider oBooleanItemProvider;

    /**
     * This creates an adapter for a {@link OpenDDS.OBoolean}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createOBooleanAdapter() {
        if (oBooleanItemProvider == null) {
            oBooleanItemProvider = new OBooleanItemProvider(this);
        }

        return oBooleanItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link OpenDDS.Case} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected CaseItemProvider caseItemProvider;

    /**
     * This creates an adapter for a {@link OpenDDS.Case}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createCaseAdapter() {
        if (caseItemProvider == null) {
            caseItemProvider = new CaseItemProvider(this);
        }

        return caseItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link OpenDDS.OChar} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected OCharItemProvider oCharItemProvider;

    /**
     * This creates an adapter for a {@link OpenDDS.OChar}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createOCharAdapter() {
        if (oCharItemProvider == null) {
            oCharItemProvider = new OCharItemProvider(this);
        }

        return oCharItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link OpenDDS.ODouble} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ODoubleItemProvider oDoubleItemProvider;

    /**
     * This creates an adapter for a {@link OpenDDS.ODouble}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createODoubleAdapter() {
        if (oDoubleItemProvider == null) {
            oDoubleItemProvider = new ODoubleItemProvider(this);
        }

        return oDoubleItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link OpenDDS.Enum} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected EnumItemProvider enumItemProvider;

    /**
     * This creates an adapter for a {@link OpenDDS.Enum}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createEnumAdapter() {
        if (enumItemProvider == null) {
            enumItemProvider = new EnumItemProvider(this);
        }

        return enumItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link OpenDDS.OFloat} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected OFloatItemProvider oFloatItemProvider;

    /**
     * This creates an adapter for a {@link OpenDDS.OFloat}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createOFloatAdapter() {
        if (oFloatItemProvider == null) {
            oFloatItemProvider = new OFloatItemProvider(this);
        }

        return oFloatItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link OpenDDS.Key} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected KeyItemProvider keyItemProvider;

    /**
     * This creates an adapter for a {@link OpenDDS.Key}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createKeyAdapter() {
        if (keyItemProvider == null) {
            keyItemProvider = new KeyItemProvider(this);
        }

        return keyItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link OpenDDS.KeyField} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected KeyFieldItemProvider keyFieldItemProvider;

    /**
     * This creates an adapter for a {@link OpenDDS.KeyField}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createKeyFieldAdapter() {
        if (keyFieldItemProvider == null) {
            keyFieldItemProvider = new KeyFieldItemProvider(this);
        }

        return keyFieldItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link OpenDDS.OLong} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected OLongItemProvider oLongItemProvider;

    /**
     * This creates an adapter for a {@link OpenDDS.OLong}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createOLongAdapter() {
        if (oLongItemProvider == null) {
            oLongItemProvider = new OLongItemProvider(this);
        }

        return oLongItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link OpenDDS.OLongLong} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected OLongLongItemProvider oLongLongItemProvider;

    /**
     * This creates an adapter for a {@link OpenDDS.OLongLong}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createOLongLongAdapter() {
        if (oLongLongItemProvider == null) {
            oLongLongItemProvider = new OLongLongItemProvider(this);
        }

        return oLongLongItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link OpenDDS.OOctet} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected OOctetItemProvider oOctetItemProvider;

    /**
     * This creates an adapter for a {@link OpenDDS.OOctet}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createOOctetAdapter() {
        if (oOctetItemProvider == null) {
            oOctetItemProvider = new OOctetItemProvider(this);
        }

        return oOctetItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link OpenDDS.Sequence} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected SequenceItemProvider sequenceItemProvider;

    /**
     * This creates an adapter for a {@link OpenDDS.Sequence}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createSequenceAdapter() {
        if (sequenceItemProvider == null) {
            sequenceItemProvider = new SequenceItemProvider(this);
        }

        return sequenceItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link OpenDDS.OShort} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected OShortItemProvider oShortItemProvider;

    /**
     * This creates an adapter for a {@link OpenDDS.OShort}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createOShortAdapter() {
        if (oShortItemProvider == null) {
            oShortItemProvider = new OShortItemProvider(this);
        }

        return oShortItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link OpenDDS.OString} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected OStringItemProvider oStringItemProvider;

    /**
     * This creates an adapter for a {@link OpenDDS.OString}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createOStringAdapter() {
        if (oStringItemProvider == null) {
            oStringItemProvider = new OStringItemProvider(this);
        }

        return oStringItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link OpenDDS.TopicStruct} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected TopicStructItemProvider topicStructItemProvider;

    /**
     * This creates an adapter for a {@link OpenDDS.TopicStruct}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createTopicStructAdapter() {
        if (topicStructItemProvider == null) {
            topicStructItemProvider = new TopicStructItemProvider(this);
        }

        return topicStructItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link OpenDDS.Typedef} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected TypedefItemProvider typedefItemProvider;

    /**
     * This creates an adapter for a {@link OpenDDS.Typedef}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createTypedefAdapter() {
        if (typedefItemProvider == null) {
            typedefItemProvider = new TypedefItemProvider(this);
        }

        return typedefItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link OpenDDS.OULong} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected OULongItemProvider ouLongItemProvider;

    /**
     * This creates an adapter for a {@link OpenDDS.OULong}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createOULongAdapter() {
        if (ouLongItemProvider == null) {
            ouLongItemProvider = new OULongItemProvider(this);
        }

        return ouLongItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link OpenDDS.OULongLong} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected OULongLongItemProvider ouLongLongItemProvider;

    /**
     * This creates an adapter for a {@link OpenDDS.OULongLong}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createOULongLongAdapter() {
        if (ouLongLongItemProvider == null) {
            ouLongLongItemProvider = new OULongLongItemProvider(this);
        }

        return ouLongLongItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link OpenDDS.Union} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected UnionItemProvider unionItemProvider;

    /**
     * This creates an adapter for a {@link OpenDDS.Union}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createUnionAdapter() {
        if (unionItemProvider == null) {
            unionItemProvider = new UnionItemProvider(this);
        }

        return unionItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link OpenDDS.OUShort} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected OUShortItemProvider ouShortItemProvider;

    /**
     * This creates an adapter for a {@link OpenDDS.OUShort}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createOUShortAdapter() {
        if (ouShortItemProvider == null) {
            ouShortItemProvider = new OUShortItemProvider(this);
        }

        return ouShortItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link OpenDDS.DataReader} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected DataReaderItemProvider dataReaderItemProvider;

    /**
     * This creates an adapter for a {@link OpenDDS.DataReader}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createDataReaderAdapter() {
        if (dataReaderItemProvider == null) {
            dataReaderItemProvider = new DataReaderItemProvider(this);
        }

        return dataReaderItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link OpenDDS.DataWriter} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected DataWriterItemProvider dataWriterItemProvider;

    /**
     * This creates an adapter for a {@link OpenDDS.DataWriter}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createDataWriterAdapter() {
        if (dataWriterItemProvider == null) {
            dataWriterItemProvider = new DataWriterItemProvider(this);
        }

        return dataWriterItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link OpenDDS.Domain} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected DomainItemProvider domainItemProvider;

    /**
     * This creates an adapter for a {@link OpenDDS.Domain}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createDomainAdapter() {
        if (domainItemProvider == null) {
            domainItemProvider = new DomainItemProvider(this);
        }

        return domainItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link OpenDDS.DomainParticipant} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected DomainParticipantItemProvider domainParticipantItemProvider;

    /**
     * This creates an adapter for a {@link OpenDDS.DomainParticipant}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createDomainParticipantAdapter() {
        if (domainParticipantItemProvider == null) {
            domainParticipantItemProvider = new DomainParticipantItemProvider(this);
        }

        return domainParticipantItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link OpenDDS.Publisher} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected PublisherItemProvider publisherItemProvider;

    /**
     * This creates an adapter for a {@link OpenDDS.Publisher}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createPublisherAdapter() {
        if (publisherItemProvider == null) {
            publisherItemProvider = new PublisherItemProvider(this);
        }

        return publisherItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link OpenDDS.Subscriber} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected SubscriberItemProvider subscriberItemProvider;

    /**
     * This creates an adapter for a {@link OpenDDS.Subscriber}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createSubscriberAdapter() {
        if (subscriberItemProvider == null) {
            subscriberItemProvider = new SubscriberItemProvider(this);
        }

        return subscriberItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link OpenDDS.DeadlineQosPolicy} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected DeadlineQosPolicyItemProvider deadlineQosPolicyItemProvider;

    /**
     * This creates an adapter for a {@link OpenDDS.DeadlineQosPolicy}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createDeadlineQosPolicyAdapter() {
        if (deadlineQosPolicyItemProvider == null) {
            deadlineQosPolicyItemProvider = new DeadlineQosPolicyItemProvider(this);
        }

        return deadlineQosPolicyItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link OpenDDS.DestinationOrderQosPolicy} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected DestinationOrderQosPolicyItemProvider destinationOrderQosPolicyItemProvider;

    /**
     * This creates an adapter for a {@link OpenDDS.DestinationOrderQosPolicy}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createDestinationOrderQosPolicyAdapter() {
        if (destinationOrderQosPolicyItemProvider == null) {
            destinationOrderQosPolicyItemProvider = new DestinationOrderQosPolicyItemProvider(this);
        }

        return destinationOrderQosPolicyItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link OpenDDS.DurabilityQosPolicy} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected DurabilityQosPolicyItemProvider durabilityQosPolicyItemProvider;

    /**
     * This creates an adapter for a {@link OpenDDS.DurabilityQosPolicy}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createDurabilityQosPolicyAdapter() {
        if (durabilityQosPolicyItemProvider == null) {
            durabilityQosPolicyItemProvider = new DurabilityQosPolicyItemProvider(this);
        }

        return durabilityQosPolicyItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link OpenDDS.DurabilityServiceQosPolicy} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected DurabilityServiceQosPolicyItemProvider durabilityServiceQosPolicyItemProvider;

    /**
     * This creates an adapter for a {@link OpenDDS.DurabilityServiceQosPolicy}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createDurabilityServiceQosPolicyAdapter() {
        if (durabilityServiceQosPolicyItemProvider == null) {
            durabilityServiceQosPolicyItemProvider = new DurabilityServiceQosPolicyItemProvider(this);
        }

        return durabilityServiceQosPolicyItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link OpenDDS.EntityFactoryQosPolicy} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected EntityFactoryQosPolicyItemProvider entityFactoryQosPolicyItemProvider;

    /**
     * This creates an adapter for a {@link OpenDDS.EntityFactoryQosPolicy}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createEntityFactoryQosPolicyAdapter() {
        if (entityFactoryQosPolicyItemProvider == null) {
            entityFactoryQosPolicyItemProvider = new EntityFactoryQosPolicyItemProvider(this);
        }

        return entityFactoryQosPolicyItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link OpenDDS.GroupDataQosPolicy} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected GroupDataQosPolicyItemProvider groupDataQosPolicyItemProvider;

    /**
     * This creates an adapter for a {@link OpenDDS.GroupDataQosPolicy}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createGroupDataQosPolicyAdapter() {
        if (groupDataQosPolicyItemProvider == null) {
            groupDataQosPolicyItemProvider = new GroupDataQosPolicyItemProvider(this);
        }

        return groupDataQosPolicyItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link OpenDDS.HistoryQosPolicy} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected HistoryQosPolicyItemProvider historyQosPolicyItemProvider;

    /**
     * This creates an adapter for a {@link OpenDDS.HistoryQosPolicy}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createHistoryQosPolicyAdapter() {
        if (historyQosPolicyItemProvider == null) {
            historyQosPolicyItemProvider = new HistoryQosPolicyItemProvider(this);
        }

        return historyQosPolicyItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link OpenDDS.LatencyBudgetQosPolicy} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected LatencyBudgetQosPolicyItemProvider latencyBudgetQosPolicyItemProvider;

    /**
     * This creates an adapter for a {@link OpenDDS.LatencyBudgetQosPolicy}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createLatencyBudgetQosPolicyAdapter() {
        if (latencyBudgetQosPolicyItemProvider == null) {
            latencyBudgetQosPolicyItemProvider = new LatencyBudgetQosPolicyItemProvider(this);
        }

        return latencyBudgetQosPolicyItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link OpenDDS.LifespanQosPolicy} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected LifespanQosPolicyItemProvider lifespanQosPolicyItemProvider;

    /**
     * This creates an adapter for a {@link OpenDDS.LifespanQosPolicy}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createLifespanQosPolicyAdapter() {
        if (lifespanQosPolicyItemProvider == null) {
            lifespanQosPolicyItemProvider = new LifespanQosPolicyItemProvider(this);
        }

        return lifespanQosPolicyItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link OpenDDS.LivelinessQosPolicy} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected LivelinessQosPolicyItemProvider livelinessQosPolicyItemProvider;

    /**
     * This creates an adapter for a {@link OpenDDS.LivelinessQosPolicy}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createLivelinessQosPolicyAdapter() {
        if (livelinessQosPolicyItemProvider == null) {
            livelinessQosPolicyItemProvider = new LivelinessQosPolicyItemProvider(this);
        }

        return livelinessQosPolicyItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link OpenDDS.OwnershipQosPolicy} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected OwnershipQosPolicyItemProvider ownershipQosPolicyItemProvider;

    /**
     * This creates an adapter for a {@link OpenDDS.OwnershipQosPolicy}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createOwnershipQosPolicyAdapter() {
        if (ownershipQosPolicyItemProvider == null) {
            ownershipQosPolicyItemProvider = new OwnershipQosPolicyItemProvider(this);
        }

        return ownershipQosPolicyItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link OpenDDS.OwnershipStrengthQosPolicy} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected OwnershipStrengthQosPolicyItemProvider ownershipStrengthQosPolicyItemProvider;

    /**
     * This creates an adapter for a {@link OpenDDS.OwnershipStrengthQosPolicy}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createOwnershipStrengthQosPolicyAdapter() {
        if (ownershipStrengthQosPolicyItemProvider == null) {
            ownershipStrengthQosPolicyItemProvider = new OwnershipStrengthQosPolicyItemProvider(this);
        }

        return ownershipStrengthQosPolicyItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link OpenDDS.PartitionQosPolicy} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected PartitionQosPolicyItemProvider partitionQosPolicyItemProvider;

    /**
     * This creates an adapter for a {@link OpenDDS.PartitionQosPolicy}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createPartitionQosPolicyAdapter() {
        if (partitionQosPolicyItemProvider == null) {
            partitionQosPolicyItemProvider = new PartitionQosPolicyItemProvider(this);
        }

        return partitionQosPolicyItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link OpenDDS.PresentationQosPolicy} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected PresentationQosPolicyItemProvider presentationQosPolicyItemProvider;

    /**
     * This creates an adapter for a {@link OpenDDS.PresentationQosPolicy}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createPresentationQosPolicyAdapter() {
        if (presentationQosPolicyItemProvider == null) {
            presentationQosPolicyItemProvider = new PresentationQosPolicyItemProvider(this);
        }

        return presentationQosPolicyItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link OpenDDS.ReaderDataLifecycleQosPolicy} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ReaderDataLifecycleQosPolicyItemProvider readerDataLifecycleQosPolicyItemProvider;

    /**
     * This creates an adapter for a {@link OpenDDS.ReaderDataLifecycleQosPolicy}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createReaderDataLifecycleQosPolicyAdapter() {
        if (readerDataLifecycleQosPolicyItemProvider == null) {
            readerDataLifecycleQosPolicyItemProvider = new ReaderDataLifecycleQosPolicyItemProvider(this);
        }

        return readerDataLifecycleQosPolicyItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link OpenDDS.ReliabilityQosPolicy} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ReliabilityQosPolicyItemProvider reliabilityQosPolicyItemProvider;

    /**
     * This creates an adapter for a {@link OpenDDS.ReliabilityQosPolicy}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createReliabilityQosPolicyAdapter() {
        if (reliabilityQosPolicyItemProvider == null) {
            reliabilityQosPolicyItemProvider = new ReliabilityQosPolicyItemProvider(this);
        }

        return reliabilityQosPolicyItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link OpenDDS.ResourceLimitsQosPolicy} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ResourceLimitsQosPolicyItemProvider resourceLimitsQosPolicyItemProvider;

    /**
     * This creates an adapter for a {@link OpenDDS.ResourceLimitsQosPolicy}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createResourceLimitsQosPolicyAdapter() {
        if (resourceLimitsQosPolicyItemProvider == null) {
            resourceLimitsQosPolicyItemProvider = new ResourceLimitsQosPolicyItemProvider(this);
        }

        return resourceLimitsQosPolicyItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link OpenDDS.TimeBasedFilterQosPolicy} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected TimeBasedFilterQosPolicyItemProvider timeBasedFilterQosPolicyItemProvider;

    /**
     * This creates an adapter for a {@link OpenDDS.TimeBasedFilterQosPolicy}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createTimeBasedFilterQosPolicyAdapter() {
        if (timeBasedFilterQosPolicyItemProvider == null) {
            timeBasedFilterQosPolicyItemProvider = new TimeBasedFilterQosPolicyItemProvider(this);
        }

        return timeBasedFilterQosPolicyItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link OpenDDS.TopicDataQosPolicy} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected TopicDataQosPolicyItemProvider topicDataQosPolicyItemProvider;

    /**
     * This creates an adapter for a {@link OpenDDS.TopicDataQosPolicy}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createTopicDataQosPolicyAdapter() {
        if (topicDataQosPolicyItemProvider == null) {
            topicDataQosPolicyItemProvider = new TopicDataQosPolicyItemProvider(this);
        }

        return topicDataQosPolicyItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link OpenDDS.TransportPriorityQosPolicy} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected TransportPriorityQosPolicyItemProvider transportPriorityQosPolicyItemProvider;

    /**
     * This creates an adapter for a {@link OpenDDS.TransportPriorityQosPolicy}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createTransportPriorityQosPolicyAdapter() {
        if (transportPriorityQosPolicyItemProvider == null) {
            transportPriorityQosPolicyItemProvider = new TransportPriorityQosPolicyItemProvider(this);
        }

        return transportPriorityQosPolicyItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link OpenDDS.UserDataQosPolicy} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected UserDataQosPolicyItemProvider userDataQosPolicyItemProvider;

    /**
     * This creates an adapter for a {@link OpenDDS.UserDataQosPolicy}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createUserDataQosPolicyAdapter() {
        if (userDataQosPolicyItemProvider == null) {
            userDataQosPolicyItemProvider = new UserDataQosPolicyItemProvider(this);
        }

        return userDataQosPolicyItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link OpenDDS.Period} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected PeriodItemProvider periodItemProvider;

    /**
     * This creates an adapter for a {@link OpenDDS.Period}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createPeriodAdapter() {
        if (periodItemProvider == null) {
            periodItemProvider = new PeriodItemProvider(this);
        }

        return periodItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link OpenDDS.WriterDataLifecycleQosPolicy} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected WriterDataLifecycleQosPolicyItemProvider writerDataLifecycleQosPolicyItemProvider;

    /**
     * This creates an adapter for a {@link OpenDDS.WriterDataLifecycleQosPolicy}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createWriterDataLifecycleQosPolicyAdapter() {
        if (writerDataLifecycleQosPolicyItemProvider == null) {
            writerDataLifecycleQosPolicyItemProvider = new WriterDataLifecycleQosPolicyItemProvider(this);
        }

        return writerDataLifecycleQosPolicyItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link OpenDDS.ApplicationTarget} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ApplicationTargetItemProvider applicationTargetItemProvider;

    /**
     * This creates an adapter for a {@link OpenDDS.ApplicationTarget}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createApplicationTargetAdapter() {
        if (applicationTargetItemProvider == null) {
            applicationTargetItemProvider = new ApplicationTargetItemProvider(this);
        }

        return applicationTargetItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link OpenDDS.Transport} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected TransportItemProvider transportItemProvider;

    /**
     * This creates an adapter for a {@link OpenDDS.Transport}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createTransportAdapter() {
        if (transportItemProvider == null) {
            transportItemProvider = new TransportItemProvider(this);
        }

        return transportItemProvider;
    }

    /**
     * This returns the root adapter factory that contains this factory.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public ComposeableAdapterFactory getRootAdapterFactory() {
        return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
    }

    /**
     * This sets the composed adapter factory that contains this factory.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
        this.parentAdapterFactory = parentAdapterFactory;
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public boolean isFactoryForType(Object type) {
        return supportedTypes.contains(type) || super.isFactoryForType(type);
    }

    /**
     * This implementation substitutes the factory itself as the key for the adapter.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter adapt(Notifier notifier, Object type) {
        return super.adapt(notifier, this);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Object adapt(Object object, Object type) {
        if (isFactoryForType(type)) {
            Object adapter = super.adapt(object, type);
            if (!(type instanceof Class<?>) || (((Class<?>) type).isInstance(adapter))) {
                return adapter;
            }
        }

        return null;
    }

    /**
     * This adds a listener.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public void addListener(INotifyChangedListener notifyChangedListener) {
        changeNotifier.addListener(notifyChangedListener);
    }

    /**
     * This removes a listener.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public void removeListener(INotifyChangedListener notifyChangedListener) {
        changeNotifier.removeListener(notifyChangedListener);
    }

    /**
     * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public void fireNotifyChanged(Notification notification) {
        changeNotifier.fireNotifyChanged(notification);

        if (parentAdapterFactory != null) {
            parentAdapterFactory.fireNotifyChanged(notification);
        }
    }

    /**
     * This disposes all of the item providers created by this factory. 
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public void dispose() {
        if (contentFilteredTopicItemProvider != null)
            contentFilteredTopicItemProvider.dispose();
        if (multiTopicItemProvider != null)
            multiTopicItemProvider.dispose();
        if (topicItemProvider != null)
            topicItemProvider.dispose();
        if (arrayItemProvider != null)
            arrayItemProvider.dispose();
        if (oBooleanItemProvider != null)
            oBooleanItemProvider.dispose();
        if (caseItemProvider != null)
            caseItemProvider.dispose();
        if (oCharItemProvider != null)
            oCharItemProvider.dispose();
        if (oDoubleItemProvider != null)
            oDoubleItemProvider.dispose();
        if (enumItemProvider != null)
            enumItemProvider.dispose();
        if (oFloatItemProvider != null)
            oFloatItemProvider.dispose();
        if (keyItemProvider != null)
            keyItemProvider.dispose();
        if (keyFieldItemProvider != null)
            keyFieldItemProvider.dispose();
        if (oLongItemProvider != null)
            oLongItemProvider.dispose();
        if (oLongLongItemProvider != null)
            oLongLongItemProvider.dispose();
        if (oOctetItemProvider != null)
            oOctetItemProvider.dispose();
        if (sequenceItemProvider != null)
            sequenceItemProvider.dispose();
        if (oShortItemProvider != null)
            oShortItemProvider.dispose();
        if (oStringItemProvider != null)
            oStringItemProvider.dispose();
        if (topicStructItemProvider != null)
            topicStructItemProvider.dispose();
        if (typedefItemProvider != null)
            typedefItemProvider.dispose();
        if (ouLongItemProvider != null)
            ouLongItemProvider.dispose();
        if (ouLongLongItemProvider != null)
            ouLongLongItemProvider.dispose();
        if (unionItemProvider != null)
            unionItemProvider.dispose();
        if (ouShortItemProvider != null)
            ouShortItemProvider.dispose();
        if (dataReaderItemProvider != null)
            dataReaderItemProvider.dispose();
        if (dataWriterItemProvider != null)
            dataWriterItemProvider.dispose();
        if (domainItemProvider != null)
            domainItemProvider.dispose();
        if (domainParticipantItemProvider != null)
            domainParticipantItemProvider.dispose();
        if (publisherItemProvider != null)
            publisherItemProvider.dispose();
        if (subscriberItemProvider != null)
            subscriberItemProvider.dispose();
        if (deadlineQosPolicyItemProvider != null)
            deadlineQosPolicyItemProvider.dispose();
        if (destinationOrderQosPolicyItemProvider != null)
            destinationOrderQosPolicyItemProvider.dispose();
        if (durabilityQosPolicyItemProvider != null)
            durabilityQosPolicyItemProvider.dispose();
        if (durabilityServiceQosPolicyItemProvider != null)
            durabilityServiceQosPolicyItemProvider.dispose();
        if (entityFactoryQosPolicyItemProvider != null)
            entityFactoryQosPolicyItemProvider.dispose();
        if (groupDataQosPolicyItemProvider != null)
            groupDataQosPolicyItemProvider.dispose();
        if (historyQosPolicyItemProvider != null)
            historyQosPolicyItemProvider.dispose();
        if (latencyBudgetQosPolicyItemProvider != null)
            latencyBudgetQosPolicyItemProvider.dispose();
        if (lifespanQosPolicyItemProvider != null)
            lifespanQosPolicyItemProvider.dispose();
        if (livelinessQosPolicyItemProvider != null)
            livelinessQosPolicyItemProvider.dispose();
        if (ownershipQosPolicyItemProvider != null)
            ownershipQosPolicyItemProvider.dispose();
        if (ownershipStrengthQosPolicyItemProvider != null)
            ownershipStrengthQosPolicyItemProvider.dispose();
        if (partitionQosPolicyItemProvider != null)
            partitionQosPolicyItemProvider.dispose();
        if (presentationQosPolicyItemProvider != null)
            presentationQosPolicyItemProvider.dispose();
        if (readerDataLifecycleQosPolicyItemProvider != null)
            readerDataLifecycleQosPolicyItemProvider.dispose();
        if (reliabilityQosPolicyItemProvider != null)
            reliabilityQosPolicyItemProvider.dispose();
        if (resourceLimitsQosPolicyItemProvider != null)
            resourceLimitsQosPolicyItemProvider.dispose();
        if (timeBasedFilterQosPolicyItemProvider != null)
            timeBasedFilterQosPolicyItemProvider.dispose();
        if (topicDataQosPolicyItemProvider != null)
            topicDataQosPolicyItemProvider.dispose();
        if (transportPriorityQosPolicyItemProvider != null)
            transportPriorityQosPolicyItemProvider.dispose();
        if (userDataQosPolicyItemProvider != null)
            userDataQosPolicyItemProvider.dispose();
        if (periodItemProvider != null)
            periodItemProvider.dispose();
        if (writerDataLifecycleQosPolicyItemProvider != null)
            writerDataLifecycleQosPolicyItemProvider.dispose();
        if (applicationTargetItemProvider != null)
            applicationTargetItemProvider.dispose();
        if (transportItemProvider != null)
            transportItemProvider.dispose();
    }

}
