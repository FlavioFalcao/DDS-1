<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Id$

    Author:  Steven Stallion
    Version: $Revision$
-->
<project name="opendds-jms-compat" default="all" basedir=".">
    <property name="build.dir" value="${basedir}/build"/>
    <property name="lib.dir" value="${basedir}/lib"/>
    <property name="src.dir" value="${basedir}/src"/>
    <property name="test.dir" value="${basedir}/test"/>
    <property name="web.dir" value="${basedir}/web"/>

    <property environment="env"/>

    <!-- Determine OpenDDS version -->
    <loadproperties srcfile="${env.DDS_ROOT}/dds/Version.h">
        <filterchain>
            <deletecharacters chars="&quot;"/>
            <tokenfilter>
                <replacestring from="#define DDS_MAJOR_VERSION" to="version.dds.major"/>
                <replacestring from="#define DDS_MINOR_VERSION" to="version.dds.minor"/>
                <replacestring from="#define DDS_VERSION" to="version.dds"/>
            </tokenfilter>
        </filterchain>
    </loadproperties>

    <property file="build.properties"/>

    <!--
        Project Paths
    -->
    <path id="project.classpath">
        <pathelement location="${build.dir}/classes"/>
        <pathelement location="${build.dir}/tests"/>

        <pathelement location="${src.dir}"/>
        <pathelement location="${test.dir}"/>

        <fileset dir="${lib.dir}"/>
        <fileset dir="${web.dir}/WEB-INF/lib"/>
    </path>

    <!--
        Project Targets
    -->
    <target name="all" depends="clean, test, ear"/>

    <target name="clean">
        <delete dir="${build.dir}"/>
    </target>

    <target name="init">
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${build.dir}/classes"/>
        <mkdir dir="${build.dir}/modules"/>
    </target>

    <target name="compile" depends="init">
        <javac srcdir="${src.dir}"
               destdir="${build.dir}/classes"
               debug="${compile.debug}"
               deprecation="${compile.deprecation}"
               optimize="${compile.optimize}"
               source="${project.source}"
               classpathref="project.classpath">
        </javac>
    </target>

    <target name="ejb-jar" depends="test.compile">
        <jar jarfile="${build.dir}/modules/${ant.project.name}-ejb.jar"
             compress="${jar.compress}"
             index="${jar.index}">
            <fileset dir="${build.dir}/classes"/>
            <fileset dir="${src.dir}">
                <include name="META-INF/ejb-jar.xml"/>
                <include name="META-INF/jboss.xml"/>
            </fileset>
        </jar>
    </target>

    <target name="war" depends="compile">
        <war warfile="${build.dir}/modules/${ant.project.name}-web.war"
             webxml="${web.dir}/WEB-INF/web.xml">
            <classes dir="${build.dir}/tests"/>
            <fileset dir="${web.dir}">
                <exclude name="WEB-INF/web.xml"/> <!-- silly ant -->
            </fileset>
        </war>
    </target>

    <target name="ear" depends="ejb-jar, war">
        <echo message="[service] Updating VERSION to ${version.dds}"/>
        <copy todir="${build.dir}">
            <fileset dir="${src.dir}/META-INF/service"/>
            <filterset>
                <filter token="VERSION" value="${version.dds}"/>
            </filterset>
        </copy>

        <ear destfile="${build.dir}/${ant.project.name}.ear"
             appxml="${src.dir}/META-INF/application.xml">
            <fileset dir="${build.dir}/modules"/>
            <metainf dir="${src.dir}/META-INF">
                <exclude name="application.xml"/> <!-- silly ant -->
                <exclude name="ejb-jar.xml"/>
                <exclude name="jboss.xml"/>
                <exclude name="service/**"/>
            </metainf>
            <zipfileset dir="${build.dir}" prefix="META-INF/service">
                <include name="*-ds.xml"/>
            </zipfileset>
        </ear>
    </target>

    <target name="deploy" if="deploy.dir">
        <copy file="${build.dir}/${ant.project.name}.ear" todir="${deploy.dir}"/>
    </target>

    <target name="test.clean">
        <delete dir="${build.dir}/tests"/>
    </target>

    <target name="test.init" depends="init">
        <mkdir dir="${build.dir}/tests"/>
    </target>

    <target name="test.compile" depends="test.init, compile">
        <javac srcdir="${test.dir}"
               destdir="${build.dir}/tests"
               debug="true"
               source="${project.source}"
               classpathref="project.classpath">
        </javac>
    </target>

    <target name="test" depends="test.compile">
        <junit haltonerror="false"
               haltonfailure="false"
               printsummary="true"
               fork="true">
            <formatter type="xml"/>
            <batchtest todir="${build.dir}/tests">
                <fileset dir="${test.dir}">
                    <include name="**/*Test.java"/>
                </fileset>
            </batchtest>
            <classpath refid="project.classpath"/>
            <jvmarg value="-ea"/> <!-- enable assertions -->
        </junit>
    </target>

    <target name="test.report" depends="test">
        <junitreport todir="${build.dir}/tests">
            <fileset dir="${build.dir}/tests">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${build.dir}/tests/report"/>
        </junitreport>
    </target>
</project>
