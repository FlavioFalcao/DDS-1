<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Id$

    Author:  Steven Stallion
    Version: $Revision$
-->
<project name="opendds-jms" default="rar" basedir=".">
    <property name="build.dir" value="${basedir}/build"/>
    <property name="doc.dir" value="${basedir}/doc"/>
    <property name="lib.dir" value="${basedir}/lib"/>
    <property name="native.dir" value="${basedir}/native"/>
    <property name="resource.dir" value="${basedir}/resource"/>
    <property name="src.dir" value="${basedir}/src"/>
    <property name="test.dir" value="${basedir}/test"/>

    <property environment="env"/>

    <!-- Determine OpenDDS version -->
    <loadproperties srcfile="${env.DDS_ROOT}/dds/Version.h">
        <filterchain>
            <deletecharacters chars="&quot;"/>
            <tokenfilter>
                <replacestring from="#define DDS_MAJOR_VERSION" to="version.dds.major"/>
                <replacestring from="#define DDS_MINOR_VERSION" to="version.dds.minor"/>
                <replacestring from="#define DDS_VERSION" to="version.dds"/>
            </tokenfilter>
        </filterchain>
    </loadproperties>

    <property file="build.properties"/>

    <property name="project.version" value="${version.dds}"/>
    <property name="project.filename" value="${ant.project.name}-${project.version}"/>

    <!--
        Project Paths
    -->
    <path id="project.classpath">
        <pathelement location="${build.dir}/classes"/>
        <pathelement location="${build.dir}/tests"/>

        <pathelement location="${native.dir}/classes"/>

        <pathelement location="${src.dir}"/>
        <pathelement location="${test.dir}"/>

        <fileset dir="${lib.dir}"/>

        <fileset dir="${env.DDS_ROOT}/lib">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <macrodef name="antnative">
        <attribute name="target"/>
        <sequential>
            <subant buildpath="${native.dir}" target="@{target}"/>
        </sequential>
    </macrodef>

    <!--
        Project Targets
    -->
    <target name="all" depends="clean, test, rar"
            description="Meta target for: clean, test, rar"/>

    <target name="clean" depends="javadoc.clean, test.clean, native.clean"
            description="Delete all build artifacts">
        <delete dir="${build.dir}"/>
    </target>

    <target name="init">
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${build.dir}/classes"/>

        <condition property="lib.prefix" value="lib">
            <os family="unix"/>
        </condition>

        <condition property="lib.suffix" value=".so">
            <os family="unix"/>
        </condition>
        <condition property="lib.suffix" value="d.dll">
            <and>
                <os family="windows"/>
                <isset property="compile.debug"/>
            </and>
        </condition>
        <condition property="lib.suffix" value=".dll">
            <os family="windows"/>
        </condition>

        <!-- Update version.properties -->
        <propertyfile file="${build.dir}/version.properties">
            <entry key="version.dds" value="${version.dds}"/>
            <entry key="version.dds.major" value="${version.dds.major}"/>
            <entry key="version.dds.minor" value="${version.dds.minor}"/>
            <entry key="version.jca" value="${version.jca}"/>
            <entry key="version.jca.minor" value="${version.jca.minor}"/>
            <entry key="version.jca.major" value="${version.jca.major}"/>
            <entry key="version.jms" value="${version.jms}"/>
            <entry key="version.jms.minor" value="${version.jms.minor}"/>
            <entry key="version.jms.major" value="${version.jms.major}"/>
        </propertyfile>
    </target>

    <target name="native.clean">
        <antnative target="clean"/>
    </target>

    <target name="native">
        <antnative target="compile"/>
    </target>

    <target name="compile" depends="init, native"
            description="Compile classes under src/">
        <javac srcdir="${src.dir}"
               destdir="${build.dir}/classes"
               debug="${compile.debug}"
               deprecation="${compile.deprecation}"
               optimize="${compile.optimize}"
               source="${project.source}"
               classpathref="project.classpath">
        </javac>
    </target>

    <target name="jar" depends="compile"
            description="Archive compiled classes and resources">
        <jar destfile="${build.dir}/${project.filename}.jar"
             compress="${jar.compress}"
             index="${jar.index}">
            <fileset dir="${build.dir}/classes"/>
            <fileset dir="${build.dir}">
                <include name="version.properties"/>
            </fileset>

            <fileset dir="${native.dir}/classes"/>

            <fileset dir="${src.dir}">
                <exclude name="**/*.java"/>
            </fileset>

            <manifest>
                <attribute name="Specification-Title" value="Java Message Service (JMS)"/>
                <attribute name="Specification-Version" value="${version.jms}"/>
                <attribute name="Specification-Vendor" value="Sun Microsystems Inc."/>
                <attribute name="Implementation-Title" value="OpenDDS JMS Provider"/>
                <attribute name="Implementation-Version" value="${version.dds}"/>
                <attribute name="Implementation-URL" value="http://www.opendds.org/"/>
            </manifest>
        </jar>
    </target>

    <target name="rar" depends="jar"
            description="Create a Resource Adapter Archive (RAR) under build/">
        <jar destfile="${build.dir}/${project.filename}.rar">
            <fileset dir="${resource.dir}"/>

            <fileset dir="${build.dir}">
                <include name="${project.filename}.jar"/>
            </fileset>
            <fileset dir="${native.dir}">
                <include name="${lib.prefix}opendds-jms-native${lib.suffix}"/>
            </fileset>

            <fileset dir="${env.DDS_ROOT}/lib">
                <include name="*.jar"/>
                <include name="${lib.prefix}DCPSInfoRepoServ${lib.suffix}"/>
                <include name="${lib.prefix}Federator${lib.suffix}"/>
                <include name="${lib.prefix}InfoRepoLib${lib.suffix}"/>
                <include name="${lib.prefix}OpenDDS_DCPS_Java${lib.suffix}"/>
                <include name="${lib.prefix}OpenDDS_Dcps${lib.suffix}"/>
                <include name="${lib.prefix}Federator${lib.suffix}"/>
                <include name="${lib.prefix}idl2jni_runtime${lib.suffix}"/>
                <include name="${lib.prefix}tao_java${lib.suffix}"/>
                <include name="${lib.prefix}SimpleTcp${lib.suffix}"/>
                <include name="${lib.prefix}SimpleUnreliableDgram${lib.suffix}"/>
                <include name="${lib.prefix}ReliableMulticast${lib.suffix}"/>
            </fileset>

            <fileset dir="${env.ACE_ROOT}/lib">
                <include name="${lib.prefix}ACE${lib.suffix}"/>
                <include name="${lib.prefix}TAO${lib.suffix}"/>
                <include name="${lib.prefix}TAO_AnyTypeCode${lib.suffix}"/>
                <include name="${lib.prefix}TAO_CodecFactory${lib.suffix}"/>
                <include name="${lib.prefix}TAO_Codeset${lib.suffix}"/>
                <include name="${lib.prefix}TAO_IORTable${lib.suffix}"/>
                <include name="${lib.prefix}TAO_PI${lib.suffix}"/>
                <include name="${lib.prefix}TAO_PortableServer${lib.suffix}"/>
                <include name="${lib.prefix}TAO_Svc_Utils${lib.suffix}"/>
            </fileset>

            <manifest>
                <attribute name="Specification-Title" value="J2EE Connector Architecture (JCA)"/>
                <attribute name="Specification-Version" value="${version.jca}"/>
                <attribute name="Specification-Vendor" value="Sun Microsystems Inc."/>
                <attribute name="Implementation-Title" value="OpenDDS JCA Resource Adapter"/>
                <attribute name="Implementation-Version" value="${version.dds}"/>
                <attribute name="Implementation-URL" value="http://www.opendds.org/"/>
            </manifest>
        </jar>
    </target>

    <target name="test.clean">
        <delete dir="${build.dir}/tests"/>
    </target>

    <target name="test.init" depends="init">
        <mkdir dir="${build.dir}/tests"/>

        <condition property="test.jvmargs" value="-Djni.nativeDebug=true">
            <and>
                <os family="windows"/>
                <istrue value="${compile.debug}"/>
            </and>
        </condition>
        <property name="test.jvmargs" value=""/>
    </target>

    <target name="test.compile" depends="compile, test.init">
        <javac srcdir="${test.dir}"
               destdir="${build.dir}/tests"
               debug="${compile.debug}"
               deprecation="${compile.deprecation}"
               optimize="${compile.optimize}"
               source="${project.source}"
               classpathref="project.classpath">
        </javac>
    </target>

    <target name="test" depends="test.compile"
            description="Run test suites under test/">
        <junit haltonerror="true"
               haltonfailure="true"
               printsummary="true"
               fork="true">
            <formatter type="brief"/>
            <batchtest todir="${build.dir}/tests">
                <fileset dir="${test.dir}">
                    <include name="**/*Test.java"/>
                </fileset>
            </batchtest>
            <jvmarg line="${test.jvmargs}"/>
            <jvmarg value="-ea"/>   <!-- enable assertions -->
            <classpath refid="project.classpath"/>
        </junit>
    </target>

    <target name="javadoc.clean">
        <delete dir="${doc.dir}/api"/>
    </target>

    <target name="javadoc.init">
        <mkdir dir="${doc.dir}/api"/>
    </target>

    <target name="javadoc" depends="native, javadoc.init"
            description="Generate API documentation under doc/api/">
        <javadoc destdir="${doc.dir}/api"
                 source="${project.source}"
                 author="true"
                 version="true"
                 overview="${doc.dir}/overview.html"
                 doctitle="OpenDDS ${version.dds} JMS API Specification"
                 windowtitle="${ant.project.name}">
            <link href="http://java.sun.com/j2se/${project.source}/docs/api/"/>
            <classpath refid="project.classpath"/>
            <packageset dir="${src.dir}"/>
            <packageset dir="${native.dir}"/>
        </javadoc>
    </target>
</project>
