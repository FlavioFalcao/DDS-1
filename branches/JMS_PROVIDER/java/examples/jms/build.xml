<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Id$

    Author:  Steven Stallion
    Version: $Revision$
-->
<project name="opendds-jms-example" default="all" basedir=".">
    <property name="build.dir" value="${basedir}/build"/>
    <property name="doc.dir" value="${basedir}/doc"/>
    <property name="lib.dir" value="${basedir}/lib"/>
    <property name="src.dir" value="${basedir}/src"/>
    <property name="test.dir" value="${basedir}/test"/>
    <property name="web.dir" value="${basedir}/web"/>

    <property file="build.properties"/>

    <!--
        Project Paths
    -->
    <fileset id="project.resources" dir="${src.dir}">
        <exclude name="**/*.java"/>
    </fileset>

    <path id="project.classpath">
        <pathelement location="${build.dir}/classes"/>
        <pathelement location="${build.dir}/tests"/>

        <fileset refid="project.resources"/>

        <fileset dir="${lib.dir}"/>
        <fileset dir="${web.dir}/WEB-INF/lib"/>
    </path>

    <!--
        Project Targets
    -->
    <target name="all" depends="clean, test, war"/>

    <target name="clean" depends="javadoc.clean, test.clean">
        <delete dir="${build.dir}"/>
    </target>

    <target name="init">
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${build.dir}/classes"/>
    </target>

    <target name="compile" depends="init">
        <javac srcdir="${src.dir}"
               destdir="${build.dir}/classes"
               debug="${compile.debug}"
               deprecation="${compile.deprecation}"
               optimize="${compile.optimize}"
               source="${project.source}"
               classpathref="project.classpath">
        </javac>
    </target>

    <target name="war" depends="compile">
        <war warfile="${build.dir}/${ant.project.name}.war"
             webxml="${web.dir}/WEB-INF/web.xml">
            <classes refid="project.resources"/>
            <fileset dir="${web.dir}">
                <exclude name="WEB-INF/web.xml"/> <!-- silly ant -->
            </fileset>
        </war>
    </target>

    <target name="deploy" if="deploy.dir">
        <copy file="${build.dir}/${ant.project.name}.war" todir="${deploy.dir}"/>
    </target>

    <target name="test.clean">
        <delete dir="${build.dir}/tests"/>
    </target>

    <target name="test.init" depends="init">
        <mkdir dir="${build.dir}/tests"/>
    </target>

    <target name="test.compile" depends="test.init, compile">
        <javac srcdir="${test.dir}"
               destdir="${build.dir}/tests"
               debug="true"
               source="${project.source}"
               classpathref="project.classpath">
        </javac>
    </target>

    <target name="test" depends="test.compile">
        <junit haltonerror="true"
               haltonfailure="true"
               printsummary="true">
            <formatter type="brief"/>
            <batchtest todir="${build.dir}/tests">
                <fileset dir="${test.dir}">
                    <include name="**/*Test.java"/>
                </fileset>
            </batchtest>
            <classpath refid="project.classpath"/>
        </junit>
    </target>

    <target name="javadoc.clean">
        <delete dir="${doc.dir}/api"/>
    </target>

    <target name="javadoc.init">
        <mkdir dir="${doc.dir}/api"/>
    </target>

    <target name="javadoc" depends="javadoc.init">
        <javadoc destdir="${doc.dir}/api"
                 source="${project.source}"
                 version="true"
                 author="true"
                 overview="${doc.dir}/overview.html"
                 doctitle="${ant.project.name} API Specification"
                 windowtitle="${ant.project.name}">
            <classpath refid="project.classpath"/>
            <packageset dir="${src.dir}"/>
        </javadoc>
    </target>
</project>
