Thu Aug 21 15:09:27 UTC 2008  Mike Martinez  <martinez_m@ociweb.com>

        * dds/InfoRepo/Federator.idl:

	  Removed unused packet sequence attribute.

        * dds/InfoRepo/FederatorManagerImpl.h:
        * dds/InfoRepo/FederatorManagerImpl_updates.cpp:

	  remove(): extended signature with optional parameters and
	            implemented.

	  Removed unused packet sequence attribute.

        * dds/InfoRepo/PersistenceUpdater.h:
        * dds/InfoRepo/PersistenceUpdater.cpp:
        * dds/InfoRepo/Updater.h:

	  Extended remove() method with optional parameters to allow use
	  in publishing federation update information.

        * tests/DCPS/BuiltInTopicTest/prst_repo_run_test.pl:
        * tests/DCPS/SetQosPartition/run_test.pl:

	  Enhanced to permit specification of debug output levels.

        * tests/DCPS/SetQosPartition/pub.ini:
        * tests/DCPS/SetQosPartition/sub.ini:

	  Added 'keep_link=1' specification to avoid timing hazard with
	  quick disconnection/reconnection that happens when updating the
	  Partition Qos value for the test.  This avoids the identified
	  problem but does not fix it.

        * dds/DCPS/transport/framework/DataLink.cpp:

	  Brought more processing within lock scope during connection
	  tear down.  This is a first step in resolving the above timing
	  hazard.

Mon Aug 18 23:06:00 UTC 2008  Mike Martinez  <martinez_m@ociweb.com>

        * dds/InfoRepo/DCPSInfo_i.cpp:

          Updated to use modified UpdateManager method signatures.

        * dds/InfoRepo/DCPS_IR_Participant.cpp:

          Implement publication of ownership updates.

        * dds/InfoRepo/FederatorManagerImpl.h:
        * dds/InfoRepo/FederatorManagerImpl.cpp:
        * dds/InfoRepo/FederatorManagerImpl_updates.cpp:

          Added base class of Updater and implement those methods.  Added
          the OwnerUpdate writer and reader.

        * dds/InfoRepo/PersistenceUpdater.h:
        * dds/InfoRepo/PersistenceUpdater.cpp:

          Change add methods to receive Upstream data types instead of
          Downstream data types.  Implement persistence serialization
          here instead of in the UpdateManager class.

        * dds/InfoRepo/UpdateManager.h:
        * dds/InfoRepo/UpdateManager.cpp:

          Change Actor updates from templated to different
          methods.  Added ownership update method.  Removed method no
          longer used.  Pushed serialization for persistence down from
          this class to the PersistenceUpdater class.

        * dds/InfoRepo/Updater.h:

          Changed add methods to use Upstream data types instead of
          Downstream data types.  This generalizes the updating to allow
          updates other than persistence.  Added ownership update method.

        * dds/InfoRepo/Updater.cpp:

          Provide a default implementation for ownership updates.

        * dds/InfoRepo/UpdateManager.inl:

          Removed this file.

Mon Aug 18 18:35:04 UTC 2008  Jonathan Pollack  <pollack_j@ociweb.com>

        * dds/InfoRepo/DCPSInfoRepo.cpp:
        * dds/InfoRepo/DefaultValues.h:
        * dds/InfoRepo/FederatorManagerImpl.h:
        * dds/InfoRepo/FederatorManagerImpl.cpp:
        * dds/InfoRepo/InfoRepoMulticastResponder.h:
        * dds/InfoRepo/InfoRepoMulticastResponder.cpp:

          Adding multicast code; there's still much to clean up.

Fri Aug 15 20:24:26 UTC 2008  Mike Martinez  <martinez_m@ociweb.com>

        * dds/DCPS/DataWriterImpl.cpp:

          Backed out changes to update_incompatible_qos due to test
          failures.

        * dds/InfoRepo/DCPSInfo_i.cpp:

          Move ownership assertion prior to adding to domain.

Fri Aug 15 17:51:45 UTC 2008  Mike Martinez  <martinez_m@ociweb.com>

        * dds/DCPS/DataWriterImpl.h:
        * dds/DCPS/DataWriterImpl.cpp:

          remove_associations():
          update_incompatible_qos():
            Made these methods idempotent (I hope!) and simplified;
            add_associations() was already idempotent.


        * dds/InfoRepo/DCPSInfo_i.cpp:

          Force locally created DomainParticipants to be owned by the
          local repository.

        * dds/InfoRepo/DCPS_IR_Participant.h:
        * dds/InfoRepo/DCPS_IR_Participant.cpp:

          Added method to allow determination of local ownership.

        * dds/InfoRepo/DCPS_IR_Publication.cpp:
        * dds/InfoRepo/DCPS_IR_Subscription.cpp:

          Predicated callbacks to the endpoints on whether the current
          repository is the 'owner' of the DomainParticipant in whic the
          endpoints are instantiated.

Fri Aug 15 03:19:12 UTC 2008  Mike Martinez  <martinez_m@ociweb.com>

        * dds/DCPS/DataReaderImpl.h:
        * dds/DCPS/DataReaderImpl.cpp:

          add_associations():
          remove_associations():
          update_incompatible_qos():
            Made these methods idempotent (I hope!) and simplified.

        * dds/DCPS/Service_Participant.cpp:

          Cleaned up and simplified previous bugfix.

        * tests/DCPS/DCPSInfoRepo/DCPSDataReaderI.cpp:

          Updated diagnostic messages to use new GUID based RepoId
          values.

        * tests/DCPS/FooTest3_0/PubDriver.cpp:

          Added diagnostic messages.

Thu Aug 14 20:07:26 UTC 2008  Mike Martinez  <martinez_m@ociweb.com>

        * dds/DCPS/Service_Participant.cpp:

          Debugged regressions caused by the failover implementations.

        * tests/DCPS/BuiltInTopicTest/DataReaderListener.cpp:
        * tests/DCPS/BuiltInTopicTest/Writer.cpp:
        * tests/DCPS/BuiltInTopicTest/monitor.cpp:
        * tests/DCPS/BuiltInTopicTest/publisher.cpp:
        * tests/DCPS/BuiltInTopicTest/subscriber.cpp:

          Beefed up some diagnostics.

Thu Aug 14 16:45:16 UTC 2008  Mike Martinez  <martinez_m@ociweb.com>

        * dds/DCPS/DomainParticipantFactoryImpl.h:
        * dds/DCPS/DomainParticipantFactoryImpl.cpp:

          Exposed internal servant participants map for reading.

        * dds/DCPS/Service_Participant.cpp:

          Application code for failover behaviors implemented.

Wed Aug 13 22:22:07 UTC 2008  Mike Martinez  <martinez_m@ociweb.com>

        * dds/DdsDcpsInfoUtils.idl:

          Use CORBA::OctetSeq instead of sequence<octet>

        * dds/InfoRepo/Federator.idl:

          Extended update topic structures to provide information
          required to implement update processing.

        * dds/InfoRepo/DCPSInfo_i.h:
        * dds/InfoRepo/DCPSInfo_i.cpp:

          changeOwnership(): added this method to simplify the
          Federator::Manager to updating ownership.

        * dds/InfoRepo/DCPS_IR_Participant.h:
        * dds/InfoRepo/DCPS_IR_Participant.cpp:

          changeOwner(): added sender to interface.  Added lock to
          portions of processing.

        * dds/InfoRepo/FederatorManagerImpl.h:

          Add OwnerUpdate handler declarations.

        * dds/InfoRepo/FederatorManagerImpl_updates.cpp:

          Implement update processing.

        * dds/InfoRepo/UpdateReceiver_T.h:

          Clean up some formatting.

Wed Aug 13 03:49:16 UTC 2008  Mike Martinez  <martinez_m@ociweb.com>

        * dds/DCPS/DomainParticipantImpl.cpp:
        * dds/DCPS/transport/framework/NetworkAddress.inl:

          More <sstream> corrections.

        * dds/DdsDcpsInfo.idl:

          attach_participant(): new method added to interface for
          attaching a DomainParticipant to a repository.

        * dds/InfoRepo/Federator.idl:

          Change FederationId type to be new GUID based Id type.  Added
          ownership update type.  Replaced owner attribute of other
          update types with sender attribute.

        * dds/InfoRepo/DCPSInfo_i.h:
        * dds/InfoRepo/DCPSInfo_i.cpp:

          attach_participant(): method implemented.

          Modified internal add methods to only update the GUID Id value
          generators when loading Entities from the current repository.
          This allows these routines to be used for federation update
          purposes as well as the current persistence behaviors.

        * dds/InfoRepo/DCPS_IR_Participant.h:
        * dds/InfoRepo/DCPS_IR_Participant.cpp:

          Started implementation of ownership management interfaces and
          behaviors.

        * dds/InfoRepo/DCPSInfoRepo.cpp:
        * dds/InfoRepo/FederatorManagerImpl.h:
        * dds/InfoRepo/FederatorManagerImpl.inl:

          Added DCPSInfo_i object reference to the manager.

        * dds/InfoRepo/FederatorManagerImpl.cpp:

          Removed unused anonymous definition.

Mon Aug 11 15:36:43 UTC 2008  Mike Martinez  <martinez_m@ociweb.com>

        * tests/DCPS/FooTest3_0/PubDriver.cpp:
        * tests/DCPS/FooTest3_1/PubDriver.cpp:
        * tests/DCPS/FooTest3_2/PubDriver.cpp:

          Include <sstream> in order to use stringstream buffers.

Mon Aug 11 15:25:53 UTC 2008  Mike Martinez  <martinez_m@ociweb.com>

        * dds/InfoRepo/DCPSInfo_i.h:
        * dds/InfoRepo/DCPSInfo_i.cpp:
        * dds/InfoRepo/DCPS_IR_Domain.h:
        * dds/InfoRepo/DCPS_IR_Domain.cpp:

          Migrated from global not-quite-unique identifiers to global
          unique identifiers for participant id values.

        * tests/DCPS/MultiRepoTest/run_test.pl:

          Added (different) FederationId specification to each
          repository.  Moved command print directives to immediately
          prior to invocation.

        * tests/DCPS/unit/Main.cpp:

          Extended diagnostic messages to logfile to include more detail.

Sat Aug  9 05:11:56 UTC 2008  Mike Martinez  <martinez_m@ociweb.com>

        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/transport/framework/DataLink.cpp:
        * dds/DCPS/transport/framework/ReceiveListenerSetMap.cpp:

          Added information to diagnostic messages.

        * dds/InfoRepo/DCPS_IR_Domain.cpp:

          Do not complain about duplicates unless different GUID values
          are actually confounded.

        * dds/InfoRepo/DCPSInfoRepo.cpp:
        * dds/InfoRepo/FederatorConfig.h:
        * dds/InfoRepo/FederatorConfig.inl:
        * dds/InfoRepo/FederatorConfig.cpp:

          Move federation Id extraction prior to where it is needed to
          construct the DCPSInfo_i object.

Fri Aug  8 16:05:50 UTC 2008  Mike Martinez  <martinez_m@ociweb.com>

        * dds/InfoRepo/GuidGenerator.h:
        * dds/InfoRepo/GuidGenerator.cpp:

          Implemented a fully GUID based Id generation.

        * dds/InfoRepo/DCPSInfoRepo.mpc:
        * dds/InfoRepo/DCPS_IR_Domain.h:
        * dds/InfoRepo/DCPS_IR_Domain.cpp:
        * dds/InfoRepo/DCPS_IR_Participant.h:
        * dds/InfoRepo/DCPS_IR_Participant.cpp:
        * dds/InfoRepo/DCPSInfo_i.cpp:

          Migrated to a fully GUID based Id generation.

        * dds/InfoRepo/DCPSInfo_i.h:

          Added block comments on the internal add_* methods that are to
          be used by the internal persistence mechanism only.

        * dds/InfoRepo/PersistenceUpdater.cpp:

          bugfix: DomainId value should be ::DDS::DomainId_t type.

        * tests/DCPS/Prst_delayed_subscriber/run_test.pl:

          Added a delay to force a potential participant Id conflict
          between the restored participants and new participants.  The
          persistence mechanism successfully avoids the conflict.

        * dds/InfoRepo/DCPS_Entity_Id_Generator.h:
        * dds/InfoRepo/DCPS_Entity_Id_Generator.cpp:

          Removed these files.  They were replaced by the
          GuidGenerator.{h,cpp} files.

Thu Aug  7 18:26:12 UTC 2008  Mike Martinez  <martinez_m@ociweb.com>

        * DevGuideExamples/DCPS/Messenger/pub.ini:
        * DevGuideExamples/DCPS/Messenger/pub_ipv6.ini:
        * DevGuideExamples/DCPS/Messenger/pub_udp.ini:
        * DevGuideExamples/DCPS/Messenger/sub.ini:
        * DevGuideExamples/DCPS/Messenger/sub_ipv6.ini:
        * DevGuideExamples/DCPS/Messenger/sub_udp.ini:
        * examples/DCPS/Messenger_Imr/pub.ini:
        * examples/DCPS/Messenger_Imr/sub.ini:
        * performance-tests/DCPS/InfoRepo_population/pub.ini:
        * performance-tests/DCPS/InfoRepo_population/pub2.ini:
        * performance-tests/DCPS/InfoRepo_population/pub_udp.ini:
        * performance-tests/DCPS/InfoRepo_population/sub.ini:
        * performance-tests/DCPS/InfoRepo_population/sub_udp.ini:
        * tests/DCPS/CorbaSeq/pub.ini:
        * tests/DCPS/CorbaSeq/sub.ini:
        * tests/DCPS/NotifyTest/pub.ini:
        * tests/DCPS/NotifyTest/sub.ini:

          Removed explicit port assignment(s).  *AGAIN*.

        * examples/DCPS/Messenger_IOGR_Imr/run_test.pl:
        * examples/DCPS/Messenger_Imr/run_test.pl:
        * tests/DCPS/BuiltInTopic/run_test.pl:
        * tests/DCPS/DCPSInfoRepo/run_test.pl:
        * tests/DCPS/DcpsIntegration/run_test-integration.pl:
        * tests/DCPS/DcpsIntegration/run_test-topic.pl:
        * tests/DCPS/SimpleFooTest/obsolete_test.pl:
        * tests/DCPS/unit/run_test.pl:
        * tests/transport/mcast_simple/run_test.pl:
        * tests/transport/mcast_simple_n/run_test.pl:
        * tests/transport/simple/run_test.pl:
        * tests/transport/simple_bp/run_test.pl:
        * tests/transport/simple_bp_rm/run_test.pl:
        * tests/transport/simple_n/run_test.pl:
        * tests/transport/udp_simple/run_test.pl:
        * tests/transport/udp_simple_n/run_test.pl:

          Increased (repo IOR) file wait time to 30 seconds, which is
          consistent with all other tests.

        * tests/DCPS/CompatibilityTest/run_test.pl:

          Increased time to wait for processing to complete to 30 seconds.

        * tests/DCPS/Prst_delayed_subscriber/publisher.cpp:
        * tests/DCPS/Prst_delayed_subscriber/subscriber.cpp:

          Added additional diagnostic messages.

        * tests/DCPS/Prst_delayed_subscriber/run_test.pl:

          Added ability to specify debug levels.

Thu Aug  7 04:10:42 UTC 2008  Mike Martinez  <martinez_m@ociweb.com>

        * dds/DCPS/transport/framework/TransportReceiveStrategy.cpp:

          Break from processing loop if there is no more data to process.
          Extended a diagnostic message to include the entire transport
          header.

        * performance-tests/DCPS/TCPListenerTest/run_test-1p1s.pl:

          Extended to allow specification of debug levels.

Wed Aug  6 19:19:07 UTC 2008  Mike Martinez  <martinez_m@ociweb.com>

        * dds/DCPS/DataReaderImpl.cpp:

          Added yet another diagnostic message.

        * dds/DCPS/DataSampleHeader.h:
        * dds/DCPS/DataSampleHeader.cpp:

          Added insertion to ostream operators for the DataSampleHeader
          and the MessageId enumeration values.

        * dds/DCPS/transport/framework/DataLink.cpp:

          Extended a diagnostic message with additional message header
          contnent information.

        * dds/DCPS/transport/framework/TransportReceiveStrategy.cpp:

          Allow sample processing to continue when the sample contains no
          data.  This includes the DATAWRITER_LIVELINESS control message
          that was not being dispatched before as it contains no data.

        * tests/DCPS/LivelinessTimeout/run_test.pl:

          Added the ability to specify Transport debug level as well.

        * tests/DCPS/LivelinessTimeout/subscriber.cpp:

          Added a status message when test passes.

Wed Aug  6 03:38:26 UTC 2008  Mike Martinez  <martinez_m@ociweb.com>

        * dds/DCPS/BuiltInTopicUtils.h:

          Hoisted lenght manipulation out of loop.  Cleaned up some
          diagnostic messages.

        * dds/DCPS/DataReaderImpl.h:
        * dds/DCPS/DataReaderImpl.cpp:

          Cleaned up some diagnostic messages.  Added an insertion
          operator for the DataReaderImpl::WriterInfo::WriterState
          enumeration.
            check_activity(): changed test from "!= DEAD" to "== ALIVE"
                              to move to "DEAD" state.  This allows
                              starting connections to remain "NOT_SET"
                              until activity (data or LIVELINESS
                              messages) are received.

        * tests/DCPS/LivelinessTimeout/run_test.pl:

          Added the ability to specify debug levels.

        * tests/DCPS/LivelinessTimeout/LivelinessTimeout.mpc:
        * tests/DCPS/LivelinessTimeout/DataReaderListenerImpl.h:
        * tests/DCPS/LivelinessTimeout/DataReaderListenerImpl.cpp:

          Renamed from DataReaderListener.{h,cpp}.  Cleaned up some
          diagnostic messages.

        * dds/DCPS/DataWriterImpl.cpp:
        * dds/InfoRepo/DCPSInfo_i.cpp:
        * dds/InfoRepo/DCPS_IR_Domain.cpp:
        * tests/DCPS/LivelinessTimeout/subscriber.cpp:

          Cleaned up some diagnostic messages.

        * tests/DCPS/LivelinessTimeout/DataReaderListener.h:
        * tests/DCPS/LivelinessTimeout/DataReaderListener.cpp:

          Removed these files.  Moved to ...Impl... filenames.

Tue Aug  5 16:57:28 UTC 2008  Mike Martinez  <martinez_m@ociweb.com>

        * bin/dcps_tests.lst:

          Unblocked the tests that were temporarily disabled during
          development.

        * dds/DCPS/BuiltInTopicUtils.h:

          Added instance_handle_to_repo_key to convert the local
          InstanceHandle_t value into a global hash of the RepoId value
          for use by the ignore interfaces.  Extended diagnostic messages
          to use the new GUID based RepoId values.
          N.B. We allow processing to continue if a 32 bit hash value of
               a RepoId produces a duplicate.  Currently this will only
               affect the ignore_*() behaviors.  If it is desireable to
               terminate on duplicate hash generation, uncomment the
               error termination code.

        * dds/DdsDcpsInfo.idl:
        * dds/DCPS/DomainParticipantImpl.cpp:
        * dds/InfoRepo/DCPSInfo_i.h:
        * dds/InfoRepo/DCPSInfo_i.cpp:
        * dds/InfoRepo/DCPS_IR_Domain.h:
        * dds/InfoRepo/DCPS_IR_Domain.cpp:

          Migrate to 'key' based ignore interfaces.  Extend diagnostic
          messages to use the new GUID based RepoId values.

        * dds/InfoRepo/DCPS_IR_Subscription.cpp:

        * tests/DCPS/BuiltInTopic/common.cpp:

          Extended the diagnostic messages to include the new GUID based
          RepoId values.

        * tests/DCPS/BuiltInTopic/run_test.pl:

          Added the ability to enable diagnostic messages.

Mon Aug  4 19:46:44 UTC 2008  Mike Martinez  <martinez_m@ociweb.com>

        * dds/DCPS/GuidUtils.h:
        * dds/DCPS/GuidUtils.cpp:

          Added an extraction operator to match the insertion operator.

        * dds/InfoRepo/UpdateListener_T.cpp:

          Made the annoying diagnostic messages conditional on debug
          level.

        * tests/DCPS/FooTest3_0/PubDriver.cpp:
        * tests/DCPS/FooTest3_0/SubDriver.cpp:
        * tests/DCPS/FooTest3_1/PubDriver.cpp:
        * tests/DCPS/FooTest3_1/SubDriver.cpp:
        * tests/DCPS/FooTest3_2/PubDriver.cpp:
        * tests/DCPS/FooTest3_2/SimpleDataReader.cpp:
        * tests/DCPS/FooTest3_2/SubDriver.cpp:

          Updated to use new GUID based RepoId values.  Changed the
          publication Id write and read operations to use the GUID based
          RepoId insertion and extraction operators.

        * tests/DCPS/BuiltInTopic/main.cpp:
        * tests/DCPS/DCPSInfoRepo/DCPSDataReaderI.h:
        * tests/DCPS/DCPSInfoRepo/DCPSDataReaderI.cpp:
        * tests/DCPS/DCPSInfoRepo/publisher.cpp:
        * tests/DCPS/DCPSInfoRepo/subscriber.cpp:
        * tests/DCPS/FooTest4/Writer.cpp:
        * tests/DCPS/unit/Main.cpp:
        * tests/transport/dds_comparative/Pub.cpp:
        * tests/transport/dds_comparative/PubDriver.cpp:
        * tests/transport/dds_comparative/PubWriter.cpp:
        * tests/transport/dds_comparative/Sub.cpp:
        * tests/transport/dds_comparative/SubDriver.cpp:
        * tests/transport/dds_comparative/SubReader.cpp:
        * tests/transport/mcast_simple/PubDriver.cpp:
        * tests/transport/mcast_simple/SimpleDataReader.cpp:
        * tests/transport/mcast_simple/SubDriver.cpp:
        * tests/transport/mcast_simple_n/PubDriver.cpp:
        * tests/transport/mcast_simple_n/SimpleDataReader.cpp:
        * tests/transport/mcast_simple_n/SimpleDataWriter.cpp:
        * tests/transport/mcast_simple_n/SubDriver.cpp:
        * tests/transport/simple/PubDriver.cpp:
        * tests/transport/simple/SimpleDataReader.cpp:
        * tests/transport/simple/SubDriver.cpp:
        * tests/transport/simple_bp/PubDriver.cpp:
        * tests/transport/simple_bp/SimpleDataReader.cpp:
        * tests/transport/simple_bp/SimpleDataWriter.cpp:
        * tests/transport/simple_bp/SubDriver.cpp:
        * tests/transport/simple_bp_rm/PubDriver.cpp:
        * tests/transport/simple_bp_rm/SimpleDataReader.cpp:
        * tests/transport/simple_bp_rm/SimpleDataWriter.cpp:
        * tests/transport/simple_bp_rm/SubDriver.cpp:
        * tests/transport/simple_n/PubDriver.cpp:
        * tests/transport/simple_n/SimpleDataReader.cpp:
        * tests/transport/simple_n/SimpleDataWriter.cpp:
        * tests/transport/simple_n/SubDriver.cpp:
        * tests/transport/udp_simple/PubDriver.cpp:
        * tests/transport/udp_simple/SimpleDataReader.cpp:
        * tests/transport/udp_simple/SubDriver.cpp:
        * tests/transport/udp_simple_n/PubDriver.cpp:
        * tests/transport/udp_simple_n/SimpleDataReader.cpp:
        * tests/transport/udp_simple_n/SimpleDataWriter.cpp:
        * tests/transport/udp_simple_n/SubDriver.cpp:

          Updated to use new GUID based RepoId values.

Fri Aug  1 22:36:52 UTC 2008  Mike Martinez  <martinez_m@ociweb.com>

        * bin/dcps_tests.lst:
          Commented out tests that are failing until I can get them
          fixed.

        * dds/DdsDcps.mpc:
        * dds/DdsDcpsGuid.idl:
        * dds/DCPS/GuidUtils.h:
        * dds/DCPS/GuidUtils.cpp:
          Implementation of new GUID based RepoId type.

        * dds/DdsDcpsInfo.idl:
        * dds/InfoRepo/DCPS_IR_Domain.h:
        * dds/DCPS/DomainParticipantImpl.cpp:
          Update to use the new RepoId type.  Added mapping from handle
          values to repository Id values as part of changing ignore
          interface to use handles.

        * dds/DCPS/BuiltInTopicUtils.h:
          Update to the new RepoId type.  Updated diagnostic messages.
            BIT_Helper_1::instance_handle_to_repo_id(): removed as obsolete.

        * dds/InfoRepo/DCPSInfo_i.h:
        * dds/InfoRepo/DCPSInfo_i.cpp:
          Update to use the new RepoId type.  Added a federation member
          to allow use of the federation Id value during processing.

        * dds/InfoRepo/DCPSInfoRepo.cpp:
          Construct the DCPSInfo_i with the federation Id now.

        * dds/InfoRepo/DCPS_IR_Domain.cpp:
          Update to use the new RepoId type.  Use the federation Id value for
          processing now.  Updated diagnostic messages.

        * dds/DdsDcpsInfoUtils.idl:
          Change the RepoId type to the new GUID based type.

        * dds/DCPS/DataSampleHeader.h:
        * dds/DCPS/DataSampleHeader.inl:
        * dds/DCPS/DataSampleHeader.cpp:
          Update to use the new Changed marshaling and demarhsaling of
          the PublicationId to use the entire 16 bytes of the new GUID
          based RepoId type.  RepoId type.

        * dds/InfoRepo/UpdateDataTypes.h: *
        dds/InfoRepo/PersistenceUpdater.cpp:
          Use more explicit types for elements.

        * dds/InfoRepo/FederatorManagerImpl.cpp:
          Documentation cleanup.

        * tests/DCPS/MultiRepoTest/run_test.pl:
        * tests/DCPS/TransientLocalTest/run_test.pl:
        * dds/DCPS/transport/framework/DataLink.cpp:
        * examples/DCPS/IntroductionToOpenDDS/run_test.pl:
          Added some diagnostics

        * tests/DCPS/SimpleFooTest/obsolete_test.pl:
          Remove obsolete relative command path.

        * tests/DCPS/FooTest3_0/PubDriver.cpp:
        * tests/DCPS/FooTest3_0/Test.idl:
        * tests/DCPS/FooTest3_0/SubDriver.cpp:
        * tests/DCPS/FooTest3_0/SimpleDataReader.cpp:
        * tests/DCPS/FooTest3_0/PubDriver.h:
        * tests/DCPS/FooTest3_0/SimpleSubscriber.cpp:
        * tests/DCPS/FooTest3_1/PubDriver.cpp:
        * tests/DCPS/FooTest3_1/SubDriver.cpp:
        * tests/DCPS/FooTest3_1/SimpleDataReader.cpp:
        * tests/DCPS/DCPSInfoRepo/DCPSDataWriterI.h:
        * tests/DCPS/DCPSInfoRepo/DCPSDataWriterI.cpp:
        * tests/DCPS/DCPSInfoRepo/publisher.cpp:
          Changes to accomodate the new RepoId type.

        * dds/InfoRepo/DCPS_IR_Publication.cpp:
        * dds/InfoRepo/DCPS_IR_Participant.cpp:
        * dds/InfoRepo/DCPS_IR_Topic.cpp:
        * dds/InfoRepo/DCPS_IR_Topic_Description.cpp:
          Update diagnostic messages.

        * dds/InfoRepo/DCPS_Entity_Id_Generator.h:
        * dds/InfoRepo/DCPS_Entity_Id_Generator.cpp:
        * dds/InfoRepo/DCPS_IR_Participant.h:
        * dds/InfoRepo/DCPS_IR_Subscription.cpp:
        * dds/DCPS/DomainParticipantFactoryImpl.cpp:
        * dds/DCPS/DataReaderImpl.h:
        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataReaderRemoteImpl.h:
        * dds/DCPS/DataReaderRemoteImpl.cpp:
        * dds/DCPS/DataWriterImpl.h:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/DataWriterRemoteImpl.h:
        * dds/DCPS/DataWriterRemoteImpl.cpp:
        * dds/DCPS/InstanceState.h:
        * dds/DCPS/PublisherImpl.h:
        * dds/DCPS/PublisherImpl.cpp:
        * dds/DCPS/SubscriberImpl.h:
        * dds/DCPS/transport/framework/QueueRemoveVisitor.h:
        * dds/DCPS/transport/framework/QueueRemoveVisitor.inl:
        * dds/DCPS/transport/framework/DataLinkSetMap.h:
        * dds/DCPS/transport/framework/PacketRemoveVisitor.h:
        * dds/DCPS/transport/framework/PacketRemoveVisitor.cpp:
        * dds/DCPS/transport/framework/ReceiveListenerSet.h:
        * dds/DCPS/transport/framework/ReceiveListenerSetMap.h:
        * dds/DCPS/transport/framework/RepoIdSet.h:
        * dds/DCPS/transport/framework/RepoIdSetMap.h:
        * dds/DCPS/transport/framework/RepoIdSetMap.cpp:
        * dds/DCPS/transport/framework/TransportControlElement.h:
        * dds/DCPS/transport/framework/TransportControlElement.cpp:
        * dds/DCPS/transport/framework/TransportSendControlElement.h:
        * dds/DCPS/transport/framework/TransportImpl.h:
          Update to use the new RepoId type.

        * examples/DCPS/IntroductionToOpenDDS/QuoteDataReaderListenerImpl.cpp:
        * examples/DCPS/IntroductionToOpenDDS/ExchangeEventDataReaderListenerImpl.cpp:
          Added read loop to message handlers to demonstrate multiple sample
          handling.

Thu Jul 24 14:09:54 UTC 2008  Jonathan Pollack  <pollack_j@ociweb.com>

        * dds/InfoRepo/DCPSInfoRepo.mpc:
        * dds/InfoRepo/InfoRepoMulticastResponder.h:
        * dds/InfoRepo/InfoRepoMulticastResponder.cpp:

          Added beginnings of a multicast responder for federation.

Fri Jul 18 16:53:02 UTC 2008  Jonathan Pollack  <pollack_j@ociweb.com>

        * dds/InfoRepo/FederatorManagerImpl.inl:

          Fixed a build error on older gcc compilers.

Wed Jul 16 18:14:33 UTC 2008  Mike Martinez  <martinez_m@ociweb.com>
        Merging trunk changes 1260:1300 out to branch.

        Tue Jul 15 22:26:55 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * bin/dcps_ts.pl:

          Added --extension which is a plugin mechanism for dcps_ts.pl.

        Tue Jul 15 13:57:08 UTC 2008  Mike Martinez  <martinez_m@ociweb.com>

        * tests/DCPS/DcpsIntegration/run_test-integration.pl:
        * tests/DCPS/DcpsIntegration/run_test-topic.pl:

          Changed to use actual object to call methods in error handling
          section.

        Sun Jul 13 19:10:57 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * tests/DCPS/SetQosDeadline/DataReaderListener.cpp:
        * tests/DCPS/SetQosPartition/DataReaderListener.cpp:

          Removed Stack_Trace header which is not needed.

        Sat Jul 12 20:52:56 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/DataReaderImpl.h:
        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataWriterImpl.h:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/InfoRepo/DCPS_IR_Publication.h:
        * dds/InfoRepo/DCPS_IR_Publication.cpp:
        * dds/InfoRepo/DCPS_IR_Subscription.h:
        * dds/InfoRepo/DCPS_IR_Subscription.cpp:
        * dds/InfoRepo/DCPS_IR_Topic.cpp:
        * dds/InfoRepo/DCPS_IR_Topic_Description.cpp:

          More fixes from DDS-1.1.1 branch.

        * tests/DCPS/SetQosPartition/pub.ini:
        * tests/DCPS/SetQosPartition/sub.ini:

          Added missing files.

        Fri Jul 11 22:45:25 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * bin/dcps_tests.lst:
        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/DomainParticipantImpl.cpp:
        * dds/DCPS/PublisherImpl.cpp:
        * dds/DCPS/SubscriberImpl.cpp:
        * dds/DCPS/TopicImpl.cpp:
        * dds/DdsDcpsInfo.idl:
        * dds/InfoRepo/DCPSInfo_i.h:
        * dds/InfoRepo/DCPSInfo_i.cpp:
        * dds/InfoRepo/DCPS_IR_Participant.h:
        * dds/InfoRepo/DCPS_IR_Participant.cpp:
        * dds/InfoRepo/DCPS_IR_Publication.h:
        * dds/InfoRepo/DCPS_IR_Publication.cpp:
        * dds/InfoRepo/DCPS_IR_Subscription.h:
        * dds/InfoRepo/DCPS_IR_Subscription.cpp:
        * dds/InfoRepo/DCPS_IR_Topic.h:
        * dds/InfoRepo/DCPS_IR_Topic.cpp:
        * dds/InfoRepo/DCPS_IR_Topic_Description.h:
        * dds/InfoRepo/DCPS_IR_Topic_Description.cpp:
        * dds/InfoRepo/DCPS_Utils.h:
        * dds/InfoRepo/DCPS_Utils.cpp:
        * tests/DCPS/SetQosDeadline:
        * tests/DCPS/SetQosDeadline/DataReaderListener.h:
        * tests/DCPS/SetQosDeadline/DataReaderListener.cpp:
        * tests/DCPS/SetQosDeadline/Messenger.idl:
        * tests/DCPS/SetQosDeadline/README:
        * tests/DCPS/SetQosDeadline/SetQosDeadline.mpc:
        * tests/DCPS/SetQosDeadline/Writer.h:
        * tests/DCPS/SetQosDeadline/Writer.cpp:
        * tests/DCPS/SetQosDeadline/domain_ids:
        * tests/DCPS/SetQosDeadline/pub.ini:
        * tests/DCPS/SetQosDeadline/publisher.cpp:
        * tests/DCPS/SetQosDeadline/run_test.pl:
        * tests/DCPS/SetQosDeadline/sub.ini:
        * tests/DCPS/SetQosDeadline/subscriber.cpp:
        * tests/DCPS/SetQosDeadline/tcp.conf:
        * tests/DCPS/SetQosPartition:
        * tests/DCPS/SetQosPartition/DataReaderListener.h:
        * tests/DCPS/SetQosPartition/DataReaderListener.cpp:
        * tests/DCPS/SetQosPartition/Messenger.idl:
        * tests/DCPS/SetQosPartition/README:
        * tests/DCPS/SetQosPartition/SetQosPartition.mpc:
        * tests/DCPS/SetQosPartition/Writer.h:
        * tests/DCPS/SetQosPartition/Writer.cpp:
        * tests/DCPS/SetQosPartition/domain_ids:
        * tests/DCPS/SetQosPartition/publisher.cpp:
        * tests/DCPS/SetQosPartition/run_test.pl:
        * tests/DCPS/SetQosPartition/subscriber.cpp:
        * tests/DCPS/SetQosPartition/tcp.conf:


          Merged in changes from RT12349 branch(renamed to DDS-1.1.1 branch).

        Wed Jul 09 20:55:52 UTC 2008  Trevor Fields  <fields_t@ociweb.com>

        * bin/dcps_tests.lst:
        * tests/transport/reliable_multicast/run_test.pl:

          Added perl script to run the reliable_multicast test because it
          can hang indefinitely.

        Tue Jul 08 22:06:45 UTC 2008  Trevor Fields  <fields_t@ociweb.com>

        * tests/DCPS/Reconnect/run_test.pl:

          Changed test to use PerlACE::waitforfileoutput_timed method.

        Tue Jul 08 18:56:19 UTC 2008  Trevor Fields  <fields_t@ociweb.com>

        * tests/DCPS/Lifespan/run_test.pl:
        * tests/DCPS/Partition/run_test.pl:
        * tests/DCPS/TransientDurability/run_test.pl:
        * tests/DCPS/TransientLocalTest/run_test.pl:

          Changed tests to use the PerlACE::waitforfileoutput_timed
          method.

        Thu Jul 03 18:40:52 UTC 2008  Trevor Fields  <fields_t@ociweb.com>

        * tests/DCPS/Compiler/idl_test1_lib/FooDef.idl:
        * tests/DCPS/Compiler/idl_test3_lib/FooDef.idl:

          Removed anonymous array declarations from structs.

        Thu Jul 03 17:57:12 UTC 2008  Trevor Fields  <fields_t@ociweb.com>

        * dds/DdsDcpsInfrastructure.idl:
        * examples/DCPS/DistributedContent/FileInfo.idl:
        * performance-tests/DCPS/TCPProfilingTest/testMessage.idl:
        * performance-tests/DCPS/TypeNoKeyBounded/PTDef.idl:
        * tests/DCPS/Compiler/idl_test1_lib/FooDef.idl:
        * tests/DCPS/FooType5/FooDef.idl:

          Removed anonymous types from the idl structs.

        Thu Jul  3 16:20:53 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/framework/DataLink.cpp:

          Fixed a warning.

        Thu Jul  3 00:33:05 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * tests/DCPS/Reconnect/README:

          Updated the patch for reproduce and verify RT11348 fix.

        Thu Jul  3 00:28:51 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        Fixed a race condition described in RT11348. The commit
        at "Fri Jun 27 19:42:06 UTC 2008  Yan Dai  <dai_y@ociweb.com>"
        broke some tests. This time the fix was fully tested.

        * dds/DCPS/transport/framework/DataLink.h:
        * dds/DCPS/transport/framework/DataLink.cpp:

          Added pub_map_releasing_ and sub_map_releasing_ to save the snapshot
          of associations in datalink at the time the link is declared for releasing
          resource due to connection problem. The DataLinkCleanupTask will remove the
          associations based on the snapshot. This would fix the problem that new
          associations are removed while removing the old associations due to a failed
          connection. The problem occurs when actual removal is performed with a delay
          after the datalink lost its connection.

        * dds/DCPS/transport/framework/DataLinkCleanupTask.h:
        * dds/DCPS/transport/framework/DataLinkCleanupTask.cpp:
        * dds/DCPS/transport/framework/TransportImpl.inl:

          Moved the datalink cleanup operations in DataLinkCleanupTask::execute to a
          new function (clear_associations()) in DataLink class and removed TransportImpl
          reference in DataLinkCleanupTask as it's not needed.

        * dds/DCPS/transport/framework/ReceiveListenerSet.h:
        * dds/DCPS/transport/framework/ReceiveListenerSet.inl:
        * dds/DCPS/transport/framework/ReceiveListenerSet.cpp:
        * dds/DCPS/transport/framework/ReceiveListenerSetMap.h:
        * dds/DCPS/transport/framework/ReceiveListenerSetMap.cpp:
        * dds/DCPS/transport/framework/RepoIdSet.h:
        * dds/DCPS/transport/framework/RepoIdSet.cpp:
        * dds/DCPS/transport/framework/RepoIdSetMap.h:
        * dds/DCPS/transport/framework/RepoIdSetMap.cpp:

          Added operator= and clear functions to support map copy and clear.

        * tests/DCPS/Reconnect/README:

          Added description of dl_clean test case to reproduce the bug and verify the fix.
          The dl_clean test can not be run in an automated nightly build since it requires
          a special patch to prove the fix.

        * tests/DCPS/Reconnect/run_test.pl:

          Added dl_clean test case.

        Wed Jul  2 19:36:12 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * DDS_TAO.mwc:

          TAO's Svc_Utils is now used by DDS.

        Tue Jul  1 16:45:17 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/framework/DataLink.h:
        * dds/DCPS/transport/framework/DataLink.cpp:
        * dds/DCPS/transport/framework/DataLinkCleanupTask.h:
        * dds/DCPS/transport/framework/DataLinkCleanupTask.cpp:
        * dds/DCPS/transport/framework/TransportImpl.inl:
        * tests/DCPS/Reconnect/README:
        * tests/DCPS/Reconnect/run_test.pl:

          Rolled back the "Fri Jun 27 19:42:06 UTC 2008  Yan Dai  <dai_y@ociweb.com>"
          changes as it broke some tests. Will fix RT11348 later.

        Mon Jun 30 17:30:08 UTC 2008  Chad Elliott  <elliott_c@ociweb.com>

        * MPC/config/dcps_ts_defaults.mpb:

          Modified to use the new 'automatic_in' and 'automatic_out' custom
          settings.

        * DevGuideExamples/DCPS/Messenger/Messenger.mpc:
        * DevGuideExamples/DCPS/Messenger_ZeroCopy/Messenger_ZeroCopy.mpc:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticast.mpc:
        * dds/DdsDcps.mpc:
        * dds/InfoRepo/DCPSInfoRepo.mpc:
        * dds/dcps_bits.mpb:
        * examples/DCPS/DistributedContent/DistributedContent.mpc:
        * examples/DCPS/IntroductionToOpenDDS/StockQuoter.mpc:
        * examples/DCPS/Messenger_IOGR_Imr/Messenger_IOGR_Imr.mpc:
        * performance-tests/DCPS/InfoRepo_population/InfoRepo_population.mpc:
        * performance-tests/DCPS/SimpleLatency/SimpleLatency.mpc:
        * performance-tests/DCPS/TCPProfilingTest/TCPProfiling.mpc:
        * performance-tests/DCPS/TransportLatency/TransportLatency.mpc:
        * performance-tests/DCPS/TypeNoKeyBounded/TypeNoKeyBounded.mpc:
        * tests/DCPS/BuiltInTopicTest/BuiltInTopicTest.mpc:
        * tests/DCPS/Compiler/idl_test2_lib/idl_test2_lib.mpc:
        * tests/DCPS/CorbaSeq/CorbaSeq.mpc:
        * tests/DCPS/Deadline/Deadline.mpc:
        * tests/DCPS/FooType/FooType.mpc:
        * tests/DCPS/FooType3/DcpsFooType3.mpc:
        * tests/DCPS/FooType3NoKey/DcpsFooType3NoKey.mpc:
        * tests/DCPS/FooType3Unbounded/DcpsFooType3Unbounded.mpc:
        * tests/DCPS/FooType4/DcpsFooType4.mpc:
        * tests/DCPS/FooType5/DcpsFooType5.mpc:
        * tests/DCPS/Lifespan/Lifespan.mpc:
        * tests/DCPS/MultiTopicTypes/MultiTopicTypes.mpc:
        * tests/DCPS/NotifyTest/NotifyTest.mpc:
        * tests/DCPS/Partition/Partition.mpc:
        * tests/DCPS/PersistentDurability/PersistentDurability.mpc:
        * tests/DCPS/Prst_delayed_subscriber/Prst_delayed_subscriber.mpc:
        * tests/DCPS/Reconnect/Reconnect.mpc:
        * tests/DCPS/TransientDurability/TransientDurability.mpc:
        * tests/DCPS/TransientLocalTest/TransientLocalTest.mpc:
        * tests/DCPS/ViewState/ViewState.mpc:
        * tests/DCPS/ZeroCopyRead/ZeroCopyRead.mpc:
        * tests/DCPS/sub_init_loop/sub_init_loop.mpc:

          Simplified these files due to the above base project change.

        Sat Jun 28 20:41:45 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * examples/DCPS/DistributedContent/DistributedContent.mpc:
        * tests/DCPS/FooType/FooType.mpc:
        * tests/DCPS/ViewState/ViewState.mpc:
        * tests/DCPS/ZeroCopyRead/ZeroCopyRead.mpc:

          Fixed MPC files that were missing the *TypeSupportImpl.cpp file after
          yesterday's scripted changes.  A recent change to MPC itself will
          allow us to not have to specify "Source_Files" in most cases, but the
          dcps_ts.pl custom type is not yet taking advantage of this new MPC
          feature.

        Fri Jun 27 22:14:26 UTC 2008  Mike Martinez  <martinez_m@ociweb.com>

        * examples/DCPS/IntroductionToOpenDDS/run_test.pl:

          Added Perl script to execute the example similar to the bat
          files.

        Fri Jun 27 19:42:06 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        Fixed a race condition described in RT11348.

        * dds/DCPS/transport/framework/DataLink.h:
        * dds/DCPS/transport/framework/DataLink.cpp:

          Added pub_map_releasing_ and sub_map_releasing_ to save the snapshot
          of associations in datalink at the time the link is declared for releasing
          resource due to connection problem. The DataLinkCleanupTask will remove the
          associations based on the snapshot. This would fix race condition that the new
          associations added to the same link during the period from the datalink
          is declared for releasing to the removal is performed are removed.

        * dds/DCPS/transport/framework/DataLinkCleanupTask.h:
        * dds/DCPS/transport/framework/DataLinkCleanupTask.cpp:
        * dds/DCPS/transport/framework/TransportImpl.inl:

          Moved the datalink cleanup operations in DataLinkCleanupTask::execute to a
          new function (clear_associations()) in DataLink class and removed TransportImpl
          reference in DataLinkCleanupTask as it's not needed.

        * tests/DCPS/Reconnect/README:

          Added description of dl_clean test case to reproduce the bug and verify the fix.
          The dl_clean test can not be run in an automated nightly build since it requires
          a special patch to prove the fix.

        * tests/DCPS/Reconnect/run_test.pl:

          Added dl_clean test case.

        Fri Jun 27 19:14:01 UTC 2008  Steve Totten  <totten_s@ociweb.com>

        * DevGuideExamples/DCPS/Messenger/run_test.pl:
          Corrected spelling of -DCPSTransportDebugLevel option.

        * DevGuideExamples/DCPS/Messenger/subscriber.cpp:
        * DevGuideExamples/DCPS/Messenger/publisher.cpp:
          Updated usage message to list all possible arguments
          for the -t (transport type) option.


Tue Jul 15 23:03:12 UTC 2008  Mike Martinez  <martinez_m@ociweb.com>

        * dds/InfoRepo/DCPSInfoRepo.cpp:

          Initialization now is performed during federation join
          operation.  Added binding in IORTable to 'Federator/1382379631'
          in addition to 'Federator'.  This allows the ability to
          federate within different domains (the numeric is decimal value
          for the default domain).

        * dds/InfoRepo/FederatorConfig.h:
        * dds/InfoRepo/FederatorConfig.inl:
        * dds/InfoRepo/FederatorConfig.cpp:

          Removed unused configuration items, added FederationDomain as a
          configurable item.

        * dds/InfoRepo/UpdateListener_T.h:
        * dds/InfoRepo/UpdateListener_T.cpp:
        * dds/InfoRepo/UpdateReceiver_T.cpp:

          Syntax corrections.

        * dds/InfoRepo/FederatorManagerImpl.h:
        * dds/InfoRepo/FederatorManagerImpl.cpp:

          Implemented 'join_federation' behavior.  Implemented
          publication and subscription initialization during the join
          processing.

Mon Jul 14 22:21:52 UTC 2008  Mike Martinez  <martinez_m@ociweb.com>

        * dds/InfoRepo/DCPSInfoRepo.mpc:

          Adjusted to new set of files.

        * dds/InfoRepo/DCPSInfoRepo.cpp:

          Removed callback to previous version of interface.

        * dds/InfoRepo/Federator.idl:

          Updated to be closer to recent requirements discussions.

        * dds/InfoRepo/FederatorManagerImpl.h:
        * dds/InfoRepo/FederatorManagerImpl.cpp:
        * dds/InfoRepo/FederatorManagerImpl_updates.cpp:

          Starting to stub new interface implementations.

        * dds/InfoRepo/UpdateListener_T.h:
        * dds/InfoRepo/UpdateListener_T.cpp:

          New version of listener for the update topics.

        * dds/InfoRepo/UpdateProcessor_T.h:
        * dds/InfoRepo/UpdateProcessor_T.cpp:

          Abstract interface for updates to be processed through.

        * dds/InfoRepo/UpdateReceiver_T.h:
        * dds/InfoRepo/UpdateReceiver_T.cpp:

          Thread(s) for processing updates.

        * dds/InfoRepo/FederatorManager_T.cpp:
        * dds/InfoRepo/FederatorManager_T_Impl.cpp:
        * dds/InfoRepo/FederatorPublications.h:
        * dds/InfoRepo/FederatorPublications.inl:
        * dds/InfoRepo/FederatorPublications.cpp:
        * dds/InfoRepo/FederatorRemoteLink.h:
        * dds/InfoRepo/FederatorRemoteLink.inl:
        * dds/InfoRepo/FederatorRemoteLink.cpp:
        * dds/InfoRepo/FederatorSubscriptions.h:
        * dds/InfoRepo/FederatorSubscriptions.inl:
        * dds/InfoRepo/FederatorSubscriptions.cpp:

          Removed these files.

Thu Jul 10 21:42:16 UTC 2008  Mike Martinez  <martinez_m@ociweb.com>

        * dds/DCPS/DomainParticipantFactoryImpl.cpp:
        * dds/DCPS/DomainParticipantImpl.h:
        * dds/DCPS/DomainParticipantImpl.cpp:
        * dds/DCPS/PublisherImpl.h:
        * dds/DCPS/PublisherImpl.cpp:
        * dds/DCPS/SubscriberImpl.h:
        * dds/DCPS/SubscriberImpl.cpp:

          Localized repository access.  This removes the known caching of
          the repository references, which can be problematic if the
          repository to call is changed after the cached reference is
          made.

Thu Jul 10 19:15:21 UTC 2008  Mike Martinez  <martinez_m@ociweb.com>

        * dds/InfoRepo/Federator.idl:

          Updated interface and data definitions to reflect latest review
          results.  This includes addition of the 'discover_federation'
          method.  It also includes the specification of the UpdateType
          and addition of the 'owner' and 'action' members to the update
          data structures.

Mon Jun 30 17:39:42 UTC 2008  Mike Martinez  <martinez_m@ociweb.com>

        * dds/DCPS/DomainParticipantFactoryImpl.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * dds/InfoRepo/DCPSInfo_i.cpp:
        * dds/InfoRepo/DCPS_Utils.h:

          These files differed from the r1260 trunk version in whitespace
          only.  Removed these differences.

        * dds/DCPS/Service_Participant.cpp:

          This was not synchronized with the r1260 trunk version.  Now it
          is identical with it.  The change was to make the
          -DCPSTransportDebugLevel option name correct.

Fri Jun 27 21:22:44 UTC 2008  Mike Martinez  <martinez_m@ociweb.com>

        Branched from
        https://svn.dre.vanderbilt.edu/DOC/DDS/branches/RT11951 r1151,
        synchronized with
        https://svn.dre.vanderbilt.edu/DOC/DDS/trunk r1260.
        See those branches for changes to this point.
        Builds and auto_run_tests.pl passing on Ubuntu 8.04 / gcc 4.2.3

LocalVariables:
mode: change-log
add-log-time-format: (lambda () (progn (setq tz (getenv "TZ")) (set-time-zone-rule "UTC") (setq time (format-time-string "%a %b %e %H:%M:%S %Z %Y" (current-time))) (set-time-zone-rule tz) time))End:
indent-tabs-mode: nil
End:
