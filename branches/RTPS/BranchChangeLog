Wed Apr 13 21:32:02 UTC 2011  Adam Mitz  <mitza@ociweb.com>

        * bin/dcps_tests.lst:

          Removed a redundant entry.

        * dds/DCPS/DataSampleHeader.h:
        * dds/DCPS/DataSampleHeader.inl:
        * dds/DCPS/DataSampleHeader.cpp:

          Implemented fragmentation logic in DataSampleHeader::split().
          Removed extra overloads on ACE_Message_Block* when we already have
          one for ACE_Message_Block&.

        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/DataReaderImpl.cpp:

          Adjusted to use ACE_Message_Block& overload.

        * dds/DCPS/RTPS/RtpsBaseMessageTypes.idl:

          'port' is a reserved keyword for CCM.

        * dds/DCPS/RTPS/rtps.mpc:

          Simplified mpc file and use consistent shared lib name.

        * dds/DCPS/transport/framework/TransportCustomizedElement.h:
        * dds/DCPS/transport/framework/TransportCustomizedElement.inl:
        * dds/DCPS/transport/framework/TransportCustomizedElement.cpp:

          Made this class a more generally applicable so we can use it for
          fragmented send-data as well.

        * dds/DCPS/transport/framework/TransportQueueElement.h:
        * dds/DCPS/transport/framework/TransportQueueElement.cpp:

          Added a fragment() method.

        * dds/DCPS/transport/framework/TransportSendStrategy.h:
        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:

          Start of integrating fragmentation.  This is nowhere near done.

        * dds/DCPS/transport/framework/TransportHeader.h:
        * dds/DCPS/transport/framework/TransportHeader.inl:
        * dds/DCPS/transport/framework/TransportHeader.cpp:

          Removed extra overloads (see DataSampleHeader notes, above).

        * dds/DCPS/transport/framework/DataLink.cpp:
        * dds/DCPS/transport/framework/DataLinkSet.inl:
        * dds/DCPS/transport/framework/PacketRemoveVisitor.cpp:
        * dds/DCPS/transport/framework/ThreadPerConnectionSendTask.cpp:
        * dds/DCPS/transport/framework/TransportControlElement.inl:
        * dds/DCPS/transport/framework/TransportReceiveStrategy.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpDataLink.cpp:
        * performance-tests/DCPS/dummyTCP/DummyTcpDataLink.cpp:

          Adjusted to account for the above changes.

        * tests/DCPS/UnitTests/Fragmentation.cpp:
        * tests/DCPS/UnitTests/UnitTests.mpc:

          New unit test for the Fragmentation logic in DataSampleHeader.

        * tests/DCPS/common/TestSupport.h:

          Fixed a wchar bug.

        * tests/transport/dds_comparative/PubWriter.cpp:
        * tests/transport/simple/SimpleDataWriter.cpp:
        * tests/transport/simple_bp/SimpleDataWriter.cpp:
        * tests/transport/simple_bp_rm/SimpleDataWriter.cpp:
        * tests/transport/simple_n/SimpleDataWriter.cpp:

          Adjusted to account for the above changes.

Tue Apr 12 18:07:41 UTC 2011  Adam Mitz  <mitza@ociweb.com>

        Laying the groundwork for generic fragmentation/reassembly in the
        transport framewowk.

        * dds/DCPS/DataSampleHeader.h:
        * dds/DCPS/DataSampleHeader.inl:
        * dds/DCPS/DataSampleHeader.cpp:

          Use what was the "reserved_4" flag bit for "more fragments".

        * dds/DCPS/transport/framework/PerConnectionSynch.cpp:
        * dds/DCPS/transport/framework/ThreadSynchWorker.h:
        * dds/DCPS/transport/framework/TransportHeader.h:
        * dds/DCPS/transport/framework/TransportHeader.inl:
        * dds/DCPS/transport/framework/TransportHeader.cpp:
        * dds/DCPS/transport/framework/TransportSendStrategy.h:
        * dds/DCPS/transport/framework/TransportSendStrategy.inl:
        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:

          All: Code cleanup while reviewing to integrate fragmentation.
          SendStratgey: new max_message_size() method for fragmentation.
          TransportHeader: changed from an entire byte to hold byte order to
          a flags byte which has both byte order and a "last fragment" flag.

        * dds/DCPS/transport/multicast/MulticastSendStrategy.h:
        * dds/DCPS/transport/udp/UdpSendStrategy.h:

          Override max_message_size() to indicate UDP's size limit.

        * tools/dissector/packet.cpp:

          Wireshark updates for the header changes above.

Tue Apr 12 15:33:01 UTC 2011  cjohn  <john_c@ociweb.com>

        * dds/DCPS/RTPS/RtpsBaseMessageTypes.idl:
        * dds/DCPS/RTPS/RtpsMessageTypes.idl:
        * dds/DCPS/RTPS/BaseMessageTypes.h:
        * dds/DCPS/RTPS/MessageTypes.h:

          Update prior Changelog comment to beter explain changes. Replace
          anonymous types with named types. Replace invalid c++ macro
          names with valid ones. Remove unnecessary typedefed
          types. Remove SubmessageHeader body definition as the body for
          that type of submessage is empty.

Mon Apr 11 21:49:37 UTC 2011  cjohn  <john_c@ociweb.com>

        * dds/DCPS/RTPS/RtpsMessageTypes.idl:
        * dds/DCPS/RTPS/RtpsBaseMessageTypes.idl:
        * dds/DCPS/RTPS/MessageTypes.h:

          Define RTPS wire message IDL structures and reserved constant values.

Mon Apr 11 15:03:30 UTC 2011  cjohn  <john_c@ociweb.com>

        * dds/DCPS/RTPS/:
        * dds/DCPS/RTPS/RtpsBaseMessageTypes.idl:
        * dds/DCPS/RTPS/RtpsMessageTypes.idl:
        * dds/DCPS/RTPS/BaseMessageTypes.h:
        * dds/DCPS/RTPS/MessageTypes.h:
        * dds/DCPS/RTPS/rtps.mpc:
        * dds/DCPS/RTPS/Test.cpp:

          Create RTPS directory and Base types.

Tue Apr  5 15:02:41 UTC 2011  Adam Mitz  <mitza@ociweb.com>

        * BranchChangeLog:

          Created branch for DDS-RTPS implementation.

Local Variables:
mode: change-log
add-log-time-format: (lambda () (progn (setq tz (getenv "TZ")) (set-time-zone-rule "UTC") (setq time (format-time-string "%a %b %e %H:%M:%S %Z %Y" (current-time))) (set-time-zone-rule tz) time))
indent-tabs-mode: nil
End:
