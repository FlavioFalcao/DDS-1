Mon Jun 28 21:59:00 UTC 2010  Adam Mitz  <mitza@ociweb.com>

        * dds/DCPS/DomainParticipantImpl.cpp:
        * dds/DCPS/MultiTopicImpl.h:
        * dds/DCPS/MultiTopicImpl.cpp:

          Began implemented spec-defined methods for MultiTopic.

        * dds/DCPS/TopicExpressionGrammar.h:

          Enhanced the grammar to get a useful AST out of it.

        * tests/DCPS/TopicExpression/TopicExpression.cpp:

          Added some new test cases.

        * tests/DCPS/ManyTopicTest:
        * tests/DCPS/ManyTopicTest/DataReaderListener1.cpp:
        * tests/DCPS/ManyTopicTest/DataReaderListener2.cpp:
        * tests/DCPS/ManyTopicTest/DataReaderListener3.cpp:
        * tests/DCPS/ManyTopicTest/ManyTopicTest.mpc:
        * tests/DCPS/ManyTopicTest/Writer.cpp:
        * tests/DCPS/ManyTopicTest/publisher.cpp:
        * tests/DCPS/ManyTopicTest/subscriber.cpp:
        * tests/DCPS/ManyTopicTypes:
        * tests/DCPS/ManyTopicTypes/ManyTopicTypes.mpc:

          Renamed these tests from "MultiTopic*" since they do not in fact
          test MultiTopics.

        * tests/DCPS/MultiTopicTest:
        * tests/DCPS/MultiTopicTypes:

          Removed these files.  They have been renamed.

Fri Jun 25 20:02:08 UTC 2010  Adam Mitz  <mitza@ociweb.com>

        * BranchChangeLog:

          Creating a ChangeLog for this branch (this file).

        * dds/DCPS/FilterExpressionGrammar.h:
        * dds/DCPS/TopicExpressionGrammar.h:

          Implemented TopicExpression parsing (for MultiTopic), includes some
          refactoring of FilterExpression parsing in order to re-use common
          grammar rules.

        * bin/dcps_tests.lst:
        * tests/DCPS/TopicExpression:
        * tests/DCPS/TopicExpression/TopicExpression.cpp:
        * tests/DCPS/TopicExpression/TopicExpressionTest.mpc:
        * tests/DCPS/TopicExpression/run_test.pl:

          New test for parsing TopicExpressions

# vim: filetype=changelog
Local Variables:
mode: change-log
add-log-time-format: (lambda () (progn (setq tz (getenv "TZ")) (set-time-zone-rule "UTC") (setq time (format-time-string "%a %b %e %H:%M:%S %Z %Y" (current-time))) (set-time-zone-rule tz) time))
indent-tabs-mode: nil
End:
